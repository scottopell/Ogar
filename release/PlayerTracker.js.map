{"version":3,"sources":["PlayerTracker.ts"],"names":["PlayerTracker","PlayerTracker.constructor","PlayerTracker.setName","PlayerTracker.getName","PlayerTracker.getScore","PlayerTracker.setColor","PlayerTracker.getTeam","PlayerTracker.update","PlayerTracker.updateSightRange","PlayerTracker.updateCenter","PlayerTracker.calcViewBox","PlayerTracker.getSpectateNodes"],"mappings":"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","file":"PlayerTracker.js","sourcesContent":["import * as Packet from './packet/index';\nimport GameServer from './GameServer';\n\nimport {ViewBox, Position, Color} from './HelperDefs/index';\n\nexport default class PlayerTracker{\n  pID: number;\n  disconnect: number;\n  name: string;\n  gameServer: GameServer;\n  socket: any;\n  nodeAdditionQueue: any[];\n  nodeDestroyQueue: any[];\n  visibleNodes: any[];\n  cells: any[];\n  // for leaderboard\n  score: number\n\n  mouse: Position;\n  mouseCells: any[]; // For individual cell movement\n  tickLeaderboard: number;\n  tickViewBox: number;\n\n  color: Color;\n\n  team: number;\n  spectate: boolean;\n  // Current player that this player is watching\n  spectatedPlayer: number;\n\n  sightRangeX: number;\n  sightRangeY: number;\n  centerPos: Position;\n  viewBox: ViewBox;\n\n  constructor(gameServer, socket) {\n    this.pID = -1;\n    this.disconnect = -1; // Disconnection\n    this.name = \"\";\n    this.gameServer = gameServer;\n    this.socket = socket;\n    this.nodeAdditionQueue = [];\n    this.nodeDestroyQueue = [];\n    this.visibleNodes = [];\n    this.cells = [];\n    this.score = 0; // Needed for leaderboard\n\n    this.mouse = {x: 0, y: 0};\n    this.mouseCells = []; // For individual cell movement\n    this.tickLeaderboard = 0; //\n    this.tickViewBox = 0;\n\n    this.team = 0;\n    this.spectate = false;\n    this.spectatedPlayer = -1; // Current player that this player is watching\n\n    // Viewing box\n    this.sightRangeX = 0;\n    this.sightRangeY = 0;\n    this.centerPos = {x: 3000, y: 3000 };\n    this.viewBox = {\n      topY: 0,\n      bottomY: 0,\n      leftX: 0,\n      rightX: 0,\n      width: 0, // Half-width\n      height: 0 // Half-height\n    };\n\n    // Gamemode function\n    if (gameServer) {\n      this.pID = gameServer.getNewPlayerID();\n      gameServer.gameMode.onPlayerInit(this);\n    }\n  }\n\n  // Setters/Getters\n\n  setName(name) {\n    this.name = name;\n  };\n\n  getName() {\n    return this.name;\n  };\n\n  getScore(reCalcScore) {\n    if (reCalcScore) {\n      var s = 0;\n      for (var i = 0; i < this.cells.length; i++) {\n        s += this.cells[i].mass;\n        this.score = s;\n      }\n    }\n    return this.score >> 0;\n  };\n\n  // TODO, not sure if this is actually used\n  setColor(color) {\n    this.color.r = color.r;\n    this.color.b = color.b;\n    this.color.g = color.g;\n  };\n\n  getTeam() {\n    return this.team;\n  };\n\n  // Functions\n\n  update() {\n    // Actions buffer (So that people cant spam packets)\n    // Split cell\n    if (this.socket.packetHandler.pressSpace) {\n      this.gameServer.gameMode.pressSpace(this.gameServer, this);\n      this.socket.packetHandler.pressSpace = false;\n    }\n\n    // Eject mass\n    if (this.socket.packetHandler.pressW) {\n      this.gameServer.gameMode.pressW(this.gameServer, this);\n      this.socket.packetHandler.pressW = false;\n    }\n\n    // Q Press\n    if (this.socket.packetHandler.pressQ) {\n      this.gameServer.gameMode.pressQ(this.gameServer, this);\n      this.socket.packetHandler.pressQ = false;\n    }\n\n    var updateNodes = []; // Nodes that need to be updated via packet\n\n    // Remove nodes from visible nodes if possible\n    var d = 0;\n    while (d < this.nodeDestroyQueue.length) {\n      var index = this.visibleNodes.indexOf(this.nodeDestroyQueue[d]);\n      if (index > -1) {\n        this.visibleNodes.splice(index, 1);\n        d++; // Increment\n      } else {\n        // Node was never visible anyways\n        this.nodeDestroyQueue.splice(d,1);\n      }\n    }\n\n    // Get visible nodes every 400 ms\n    var nonVisibleNodes = []; // Nodes that are not visible\n    if (this.tickViewBox <= 0) {\n      var newVisible = this.calcViewBox();\n\n      // Compare and destroy nodes that are not seen\n      for (var i = 0; i < this.visibleNodes.length; i++) {\n        var index: number = newVisible.indexOf(this.visibleNodes[i]);\n        if (index == -1) {\n          // Not seen by the client anymore\n          nonVisibleNodes.push(this.visibleNodes[i]);\n        }\n      }\n\n      // Add nodes to client's screen if client has not seen it already\n      for (var i = 0; i < newVisible.length; i++) {\n        var index = this.visibleNodes.indexOf(newVisible[i]);\n        if (index == -1) {\n          updateNodes.push(newVisible[i]);\n        }\n      }\n\n      this.visibleNodes = newVisible;\n      // Reset Ticks\n      this.tickViewBox = 2;\n    } else {\n      this.tickViewBox--;\n      // Add nodes to screen\n      for (var i = 0; i < this.nodeAdditionQueue.length; i++) {\n        var node = this.nodeAdditionQueue[i];\n        this.visibleNodes.push(node);\n        updateNodes.push(node);\n      }\n    }\n\n    // Update moving nodes\n    for (var i = 0; i < this.visibleNodes.length; i++) {\n      var node = this.visibleNodes[i];\n      if (node.sendUpdate()) {\n        // Sends an update if cell is moving\n        updateNodes.push(node);\n      }\n    }\n\n    // Send packet\n    this.socket.sendPacket(new Packet.UpdateNodes(this.nodeDestroyQueue, updateNodes, nonVisibleNodes));\n\n    this.nodeDestroyQueue = []; // Reset destroy queue\n    this.nodeAdditionQueue = []; // Reset addition queue\n\n    // Update leaderboard\n    if (this.tickLeaderboard <= 0) {\n      this.socket.sendPacket(this.gameServer.lb_packet);\n      this.tickLeaderboard = 10; // 20 ticks = 1 second\n    } else {\n      this.tickLeaderboard--;\n    }\n\n    // Handles disconnections\n    if (this.disconnect > -1) {\n      // Player has disconnected... remove it when the timer hits -1\n      this.disconnect--;\n      if (this.disconnect == -1) {\n        // Remove all client cells\n        var len = this.cells.length;\n        for (var i = 0; i < len; i++) {\n          var cell = this.socket.playerTracker.cells[0];\n\n          if (!cell) {\n            continue;\n          }\n\n          this.gameServer.removeNode(cell);\n        }\n\n        // Remove from client list\n        var index = this.gameServer.clients.indexOf(this.socket);\n        if (index != -1) {\n          this.gameServer.clients.splice(index,1);\n        }\n      }\n    }\n  };\n\n  // Viewing box\n\n  updateSightRange() { // For view distance\n    var totalSize = 1.0;\n    var len = this.cells.length;\n\n    for (var i = 0; i < len;i++) {\n      if (!this.cells[i]) {\n        continue;\n      }\n\n      totalSize += this.cells[i].getSize();\n    }\n\n    var factor = Math.pow(Math.min(64.0 / totalSize, 1), 0.4);\n    this.sightRangeX = this.gameServer.config.serverViewBaseX / factor;\n    this.sightRangeY = this.gameServer.config.serverViewBaseY / factor;\n  };\n\n  updateCenter() { // Get center of cells\n    var len = this.cells.length;\n\n    if (len <= 0) {\n      return; // End the function if no cells exist\n    }\n\n    var X = 0;\n    var Y = 0;\n    for (var i = 0; i < len ;i++) {\n      if (!this.cells[i]) {\n        continue;\n      }\n\n      X += this.cells[i].position.x;\n      Y += this.cells[i].position.y;\n    }\n\n    this.centerPos.x = X / len;\n    this.centerPos.y = Y / len;\n  };\n\n  calcViewBox() {\n    if (this.spectate) {\n      // Spectate mode\n      return this.getSpectateNodes();\n    }\n\n    // Main function\n    this.updateSightRange();\n    this.updateCenter();\n\n    // Box\n    this.viewBox.topY = this.centerPos.y - this.sightRangeY;\n    this.viewBox.bottomY = this.centerPos.y + this.sightRangeY;\n    this.viewBox.leftX = this.centerPos.x - this.sightRangeX;\n    this.viewBox.rightX = this.centerPos.x + this.sightRangeX;\n    this.viewBox.width = this.sightRangeX;\n    this.viewBox.height = this.sightRangeY;\n\n    var newVisible = [];\n    for (var i = 0; i < this.gameServer.nodes.length ;i++) {\n      var node = this.gameServer.nodes[i];\n\n      if (!node) {\n        continue;\n      }\n\n      if (node.visibleCheck(this.viewBox,this.centerPos)) {\n        // Cell is in range of viewBox\n        newVisible.push(node);\n      }\n    }\n    return newVisible;\n  };\n\n  getSpectateNodes() {\n    var specPlayer;\n\n    if (this.gameServer.getMode().specByLeaderboard) {\n      this.spectatedPlayer = Math.min(this.gameServer.leaderboard.length - 1, this.spectatedPlayer);\n      specPlayer = this.spectatedPlayer == -1 ? null : this.gameServer.leaderboard[this.spectatedPlayer];\n    } else {\n      this.spectatedPlayer = Math.min(this.gameServer.clients.length - 1, this.spectatedPlayer);\n      specPlayer = this.spectatedPlayer == -1 ? null : this.gameServer.clients[this.spectatedPlayer].playerTracker;\n    }\n\n    if (specPlayer) {\n      // If selected player has died/disconnected, switch spectator and try again next tick\n      if (specPlayer.cells.length == 0) {\n        this.gameServer.switchSpectator(this);\n        return [];\n      }\n\n      // Get spectated player's location and calculate zoom amount\n      var specZoom = Math.sqrt(100 * specPlayer.score);\n      specZoom = Math.pow(Math.min(40.5 / specZoom, 1.0), 0.4) * 0.6;\n      // TODO: Send packet elsewhere so it is send more often\n      this.socket.sendPacket(new Packet.UpdatePosition(specPlayer.centerPos.x, specPlayer.centerPos.y, specZoom));\n      // TODO: Recalculate visible nodes for spectator to match specZoom\n      return specPlayer.visibleNodes.slice(0,specPlayer.visibleNodes.length);\n    } else {\n      return []; // Nothing\n    }\n  };\n\n}\n"],"sourceRoot":"/source/"}