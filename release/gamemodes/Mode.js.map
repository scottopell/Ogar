{"version":3,"sources":["gamemodes/Mode.ts"],"names":["Mode","Mode.constructor","Mode.onServerInit","Mode.onTick","Mode.onChange","Mode.onPlayerInit","Mode.onPlayerSpawn","Mode.pressQ","Mode.pressW","Mode.pressSpace","Mode.onCellAdd","Mode.onCellRemove","Mode.onCellMove","Mode.updateLB"],"mappings":";;;;;;;;;;IAGA,IAAA;AAcEA,aAdF,IAAA,GAcEA;8BAdF,IAAA;;AAeIC,YAAIA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA;AACbA,YAAIA,CAACA,IAAIA,GAAGA,OAAOA,CAACA;AACpBA,YAAIA,CAACA,QAAQA,GAAGA,GAAGA,CAACA;AACpBA,YAAIA,CAACA,QAAQA,GAAGA,EAAEA,CAACA;AACnBA,YAAIA,CAACA,SAASA,GAAGA,KAAKA,CAACA;AACvBA,YAAIA,CAACA,iBAAiBA,GAAGA,KAAKA,CAACA;KAChCA;;iBArBH,IAAA;;eAuBcD,sBAACA,UAAsBA,EAAAA;AAEjCE,sBAAUA,CAACA,GAAGA,GAAGA,IAAIA,CAACA;SACvBA;;;eAEKF,gBAACA,UAAsBA,EAAAA,EAE5BG;;;eAEOH,kBAACA,UAAsBA,EAAAA,EAE9BI;;;eAEWJ,sBAACA,MAAqBA,EAAAA,EAEjCK;;;eAEYL,uBAACA,UAAsBA,EAAEA,MAAqBA,EAAAA;AAEvDM,kBAAMA,CAACA,KAAKA,GAAGA,UAAUA,CAACA,cAAcA,EAAEA,CAACA;AAC3CA,sBAAUA,CAACA,WAAWA,CAACA,MAAMA,EAAEA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;SAC9CA;;;eAEKN,gBAACA,UAAsBA,EAAEA,MAAqBA,EAAAA;AAEhDO,gBAAIA,MAAMA,CAACA,QAAQA,EAAEA;AACjBA,0BAAUA,CAACA,eAAeA,CAACA,MAAMA,CAACA,CAACA;aACtCA;SACJA;;;eAEKP,gBAACA,UAAsBA,EAAEA,MAAqBA,EAAAA;AAEhDQ,sBAAUA,CAACA,SAASA,CAACA,MAAMA,CAACA,CAACA;SAChCA;;;eAESR,oBAACA,UAAsBA,EAAEA,MAAqBA,EAAAA;AAEpDS,sBAAUA,CAACA,UAAUA,CAACA,MAAMA,CAACA,CAACA;SACjCA;;;eAEQT,mBAACA,IAAmBA,EAAAA,EAE5BU;;;eAEWV,sBAACA,IAAmBA,EAAAA,EAE/BW;;;eAESX,oBAACA,EAAUA,EAAEA,EAAUA,EAAEA,IAAmBA,EAAAA,EAErDY;;;eAEOZ,kBAACA,UAAsBA,EAAAA,EAE9Ba;;;WA7EH,IAAA;;;qBAAA,IAAA","file":"gamemodes/Mode.js","sourcesContent":["import GameServer from '../GameServer'\nimport PlayerTracker from '../PlayerTracker'\n\nexport default class Mode {\n  ID: number;\n  name: string;\n  // Modifier for decay rate (multiplier)\n  decayMod: number;\n  // Packet id for leaderboard packet (48 = Text List, 49 = List, 50 = Pie chart)\n  packetLB: number;\n  // True = gamemode uses teams, false = gamemode doesnt use teams\n  haveTeams: boolean;\n  // false = spectate from player list instead of leaderboard\n  specByLeaderboard: boolean;\n\n  rankOne: any;\n\n  constructor(){\n    this.ID = -1;\n    this.name = \"Blank\";\n    this.decayMod = 1.0;\n    this.packetLB = 49;\n    this.haveTeams = false;\n    this.specByLeaderboard = false;\n  }\n\n  onServerInit(gameServer: GameServer){\n    // Called when the server starts\n    gameServer.run = true;\n  }\n\n  onTick(gameServer: GameServer) {\n      // Called on every game tick \n  }\n\n  onChange(gameServer: GameServer) {\n      // Called when someone changes the gamemode via console commands\n  }\n\n  onPlayerInit(player: PlayerTracker) {\n      // Called after a player object is constructed\n  }\n\n  onPlayerSpawn(gameServer: GameServer, player: PlayerTracker) {\n      // Called when a player is spawned\n      player.color = gameServer.getRandomColor(); // Random color\n      gameServer.spawnPlayer(player, null, null);\n  }\n\n  pressQ(gameServer: GameServer, player: PlayerTracker) {\n      // Called when the Q key is pressed\n      if (player.spectate) {\n          gameServer.switchSpectator(player);\n      }\n  }\n\n  pressW(gameServer: GameServer, player: PlayerTracker) {\n      // Called when the W key is pressed\n      gameServer.ejectMass(player);\n  }\n\n  pressSpace(gameServer: GameServer, player: PlayerTracker) {\n      // Called when the Space bar is pressed\n      gameServer.splitCells(player);\n  }\n\n  onCellAdd(cell: PlayerTracker) {\n      // Called when a player cell is added\n  }\n\n  onCellRemove(cell: PlayerTracker) {\n      // Called when a player cell is removed\n  }\n\n  onCellMove(x1: number, y1: number, cell: PlayerTracker) {\n    // Called when a player cell is moved\n  }\n\n  updateLB(gameServer: GameServer) {\n      // Called when the leaderboard update function is called\n  }\n}\n"],"sourceRoot":"/source/"}