{"version":3,"sources":["gamemodes/FFA.ts"],"names":["FFA","FFA.constructor","FFA.leaderboardAddSort","FFA.onPlayerSpawn","FFA.updateLB"],"mappings":"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","file":"gamemodes/FFA.js","sourcesContent":["import Mode from './Mode';\nimport PlayerTracker from '../PlayerTracker'\n\nexport default class FFA extends Mode{\n  constructor(){\n    super();\n    this.ID = 0;\n    this.name = \"Free For All\";\n    this.specByLeaderboard = true;\n  }\n\n  // Gamemode Specific Functions\n  leaderboardAddSort(player: PlayerTracker, leaderboard) {\n    // Adds the player and sorts the leaderboard\n    var len = leaderboard.length - 1;\n    var loop = true;\n    while ((len >= 0) && (loop)) {\n      // Start from the bottom of the leaderboard\n      if (player.getScore(false) <= leaderboard[len].getScore(false)) {\n        leaderboard.splice(len + 1, 0, player);\n        loop = false; // End the loop if a spot is found\n      }\n      len--;\n    }\n    if (loop) {\n      // Add to top of the list because no spots were found\n      leaderboard.splice(0, 0, player);\n    }\n  }\n\n  // Override\n\n  onPlayerSpawn(gameServer,player) {\n    // Random color\n    player.color = gameServer.getRandomColor();\n\n    // Set up variables\n    var pos, startMass;\n\n    // Check if there are ejected mass in the world.\n    if (gameServer.nodesEjected.length > 0) {\n      var index = Math.floor(Math.random() * 100) + 1;\n      if (index <= gameServer.config.ejectSpawnPlayer) {\n        // Get ejected cell\n        var index = Math.floor(Math.random() * gameServer.nodesEjected.length);\n        var e = gameServer.nodesEjected[index];\n\n        // Remove ejected mass\n        gameServer.removeNode(e);\n\n        // Inherit\n        pos = {x: e.position.x, y: e.position.y};\n        startMass = e.mass;\n\n        var color = e.getColor();\n        player.setColor({\n          'r': color.r,\n          'g': color.g,\n          'b': color.b\n        });\n      }\n    }\n\n    // Spawn player\n    gameServer.spawnPlayer(player,pos,startMass);\n  }\n\n  updateLB(gameServer) {\n    var lb = gameServer.leaderboard;\n    // Loop through all clients\n    for (var i = 0; i < gameServer.clients.length; i++) {\n      if (typeof gameServer.clients[i] == \"undefined\") {\n        continue;\n      }\n\n      var player = gameServer.clients[i].playerTracker;\n      var playerScore = player.getScore(true);\n      if (player.cells.length <= 0) {\n        continue;\n      }\n\n      if (lb.length == 0) {\n        // Initial player\n        lb.push(player);\n        continue;\n      } else if (lb.length < 10) {\n        this.leaderboardAddSort(player,lb);\n      } else {\n        // 10 in leaderboard already\n        if (playerScore > lb[9].getScore(false)) {\n          lb.pop();\n          this.leaderboardAddSort(player,lb);\n        }\n      }\n    }\n\n    this.rankOne = lb[0];\n  }\n\n}\n"],"sourceRoot":"/source/"}