{"version":3,"sources":["gamemodes/Experimental.ts"],"names":["Experimental","Experimental.constructor","Experimental.updateMotherCells","Experimental.spawnMotherCell","Experimental.onServerInit","Experimental.onTick","Experimental.onChange","MotherCell","MotherCell.constructor","MotherCell.getEatingRange","MotherCell.update","MotherCell.checkEat","MotherCell.abs","MotherCell.spawnFood","MotherCell.onAdd","MotherCell.onRemove","MotherCell.visibleCheck","ExperimentalVirus","ExperimentalVirus.constructor","ExperimentalVirus.feed"],"mappings":"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","file":"gamemodes/Experimental.js","sourcesContent":["import FFA from './FFA';\nimport {Cell, Food, Virus} from '../entity/index';\nvar VirusFeed = require('../entity/Virus').prototype.feed;\nimport PlayerTracker from '../PlayerTracker';\nimport GameServer from '../GameServer';\nimport {Position} from '../HelperDefs/index';\n\nexport default class Experimental extends FFA {\n  nodesMother: any[];\n  tickMother: number;\n  tickMotherS: number;\n\n  motherCellMass: number;\n  // How many ticks it takes to update the mother cell (1 tick = 50 ms)\n  motherUpdateInterval: number;\n  // How many ticks it takes to spawn another mother cell - Currently 5 seconds\n  motherSpawnInterval: number;\n  motherMinAmount: number;\n\n  constructor(){\n    super();\n\n    this.ID = 2;\n    this.name = \"Experimental\";\n    this.specByLeaderboard = true;\n\n    // Gamemode Specific Variables\n    this.nodesMother = [];\n    this.tickMother = 0;\n    this.tickMotherS = 0;\n\n    // Config\n    this.motherCellMass = 200;\n    this.motherUpdateInterval = 5;\n    this.motherSpawnInterval = 100;\n    this.motherMinAmount = 5;\n  }\n\n  // Gamemode Specific Functions\n\n  updateMotherCells(gameServer) {\n    for (var i in this.nodesMother) {\n      var mother = this.nodesMother[i];\n\n      // Checks\n      mother.update(gameServer);\n      mother.checkEat(gameServer);\n    }\n  }\n\n  spawnMotherCell(gameServer) {\n    // Checks if there are enough mother cells on the map\n    if (this.nodesMother.length < this.motherMinAmount) {\n      // Spawns a mother cell\n      var pos =  gameServer.getRandomPosition();\n\n      // Check for players\n      for (var i = 0; i < gameServer.nodesPlayer.length; i++) {\n        var check = gameServer.nodesPlayer[i];\n\n        var r = check.getSize(); // Radius of checking player cell\n\n        // Collision box\n        var topY = check.position.y - r;\n        var bottomY = check.position.y + r;\n        var leftX = check.position.x - r;\n        var rightX = check.position.x + r;\n\n        // Check for collisions\n        if (pos.y > bottomY) {\n          continue;\n        }\n\n        if (pos.y < topY) {\n          continue;\n        }\n\n        if (pos.x > rightX) {\n          continue;\n        }\n\n        if (pos.x < leftX) {\n          continue;\n        }\n\n        // Collided\n        return;\n      }\n\n      // Spawn if no cells are colliding\n      var m = new MotherCell(gameServer.getNextNodeId(), null, pos, this.motherCellMass, null);\n    }\n  };\n\n  // Override\n\n  onServerInit(gameServer) {\n    // Called when the server starts\n    gameServer.run = true;\n\n    // TODO use experimental Virus here\n\n    // Override this\n    gameServer.getRandomSpawn = gameServer.getRandomPosition;\n  };\n\n  onTick(gameServer) {\n    // Mother Cell updates\n    if (this.tickMother >= this.motherUpdateInterval) {\n      this.updateMotherCells(gameServer);\n      this.tickMother = 0;\n    } else {\n      this.tickMother++;\n    }\n\n    // Mother Cell Spawning\n    if (this.tickMotherS >= this.motherSpawnInterval) {\n      this.spawnMotherCell(gameServer);\n      this.tickMotherS = 0;\n    } else {\n      this.tickMotherS++;\n    }\n  };\n\n  onChange(gameServer) {\n    // Remove all mother cells\n    for (var i in this.nodesMother) {\n      gameServer.removeNode(this.nodesMother[i]);\n    }\n    // Add back default functions\n    Virus.prototype.feed = VirusFeed;\n    gameServer.getRandomSpawn = require('../GameServer').prototype.getRandomSpawn;\n  };\n\n  // New cell type\n\n}\n\nclass MotherCell extends Cell{\n  constructor(\n      nodeId: number,\n      owner: PlayerTracker,\n      position: Position,\n      mass: number,\n      gameServer: GameServer) {\n\n    super(nodeId, owner, position, mass, gameServer);\n\n    this.cellType = 2; // mimics Virus\n    this.color = {r: 205, g: 85, b: 100};\n    this.spiked = 1;\n\n  }\n\n  getEatingRange() {\n    return this.getSize() * .5;\n  };\n\n  update(gameServer) {\n    // Add mass\n    this.mass += .25;\n\n    // Spawn food\n    var maxFood = 10; // Max food spawned per tick\n    var i = 0; // Food spawn counter\n    while ((this.mass > gameServer.gameMode.motherCellMass) && (i < maxFood))  {\n      // Only spawn if food cap hasn been reached\n      if (gameServer.currentFood < gameServer.config.foodMaxAmount) {\n        this.spawnFood(gameServer);\n      }\n\n      // Incrementers\n      this.mass--;\n      i++;\n    }\n  }\n\n  checkEat(gameServer) {\n    var safeMass = this.mass * .9;\n    var r = this.getSize(); // The box area that the checked cell needs to be in to be considered eaten\n\n    // Loop for potential prey\n    for (var i in gameServer.nodesPlayer) {\n      var check = gameServer.nodesPlayer[i];\n\n      if (check.mass > safeMass) {\n        // Too big to be consumed\n        continue;\n      }\n\n      // Calculations\n      var len = r - (check.getSize() / 2) >> 0;\n      if ((this.abs(this.position.x - check.position.x) < len) && (this.abs(this.position.y - check.position.y) < len)) {\n        // A second, more precise check\n        var xs = Math.pow(check.position.x - this.position.x, 2);\n        var ys = Math.pow(check.position.y - this.position.y, 2);\n        var dist = Math.sqrt( xs + ys );\n\n        if (r > dist) {\n          // Eats the cell\n          gameServer.removeNode(check);\n          this.mass += check.mass;\n        }\n      }\n    }\n    for (var i in gameServer.movingNodes) {\n      var check = gameServer.movingNodes[i];\n\n      if ((check.getType() == 1) || (check.mass > safeMass)) {\n        // Too big to be consumed/ No player cells\n        continue;\n      }\n\n      // Calculations\n      var len = r >> 0;\n      if ((this.abs(this.position.x - check.position.x) < len) && (this.abs(this.position.y - check.position.y) < len)) {\n        // Eat the cell\n        gameServer.removeNode(check);\n        this.mass += check.mass;\n      }\n    }\n  }\n\n  abs(n) {\n    // Because Math.abs is slow\n    return (n < 0) ? -n: n;\n  }\n\n  spawnFood(gameServer) {\n    // Get starting position\n    var angle = Math.random() * 6.28; // (Math.PI * 2) ??? Precision is not our greatest concern here\n    var r = this.getSize();\n    var pos = {\n    x: this.position.x + ( r * Math.sin(angle) ),\n    y: this.position.y + ( r * Math.cos(angle) )\n    };\n\n    // Spawn food\n    var f = new Food(gameServer.getNextNodeId(), null, pos, gameServer.config.foodMass, null);\n    f.setColor(gameServer.getRandomColor());\n\n    gameServer.addNode(f);\n    gameServer.currentFood++;\n\n    // Move engine\n    f.angle = angle;\n    var dist = (Math.random() * 10) + 22; // Random distance\n    f.setMoveEngineData(dist, 15, null);\n\n    gameServer.setAsMovingNode(f);\n  };\n\n  onAdd(gameServer) {\n    gameServer.gameMode.nodesMother.push(this); // Temporary\n  };\n\n  onRemove(gameServer) {\n    var index = gameServer.gameMode.nodesMother.indexOf(this);\n    if (index != -1) {\n      gameServer.gameMode.nodesMother.splice(index,1);\n    }\n  };\n\n  visibleCheck(box,centerPos) {\n    // Checks if this cell is visible to the player\n    var cellSize = this.getSize();\n    var lenX = cellSize + box.width >> 0; // Width of cell + width of the box (Int)\n    var lenY = cellSize + box.height >> 0; // Height of cell + height of the box (Int)\n\n    return (this.abs(this.position.x - centerPos.x) < lenX) && (this.abs(this.position.y - centerPos.y) < lenY);\n  };\n}\nclass ExperimentalVirus extends Virus{\n  constructor(nodeId, owner, position, mass, gameServer){\n    super(nodeId, owner, position, mass, gameServer);\n  }\n\n  // Special virus mechanics\n  feed(feeder,gameServer) {\n    gameServer.removeNode(feeder);\n    // Pushes the virus\n    this.setAngle(feeder.getAngle()); // Set direction if the virus explodes\n    this.moveEngineTicks = 5; // Amount of times to loop the movement function\n    this.moveEngineSpeed = 30;\n\n    var index = gameServer.movingNodes.indexOf(this);\n    if (index == -1) {\n      gameServer.movingNodes.push(this);\n    }\n  };\n}\n"],"sourceRoot":"/source/"}