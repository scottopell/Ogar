{"version":3,"sources":["gamemodes/Rainbow.ts"],"names":["Rainbow","Rainbow.constructor","Rainbow.changeColor","Rainbow.onServerInit","Rainbow.onChange","Rainbow.onTick"],"mappings":";;;;;;;;;;;;;;;;oBAAgB,OAAO;;;;2BACJ,iBAAiB;;AAEpC,IAAI,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC;;IAE5D,OAAA;cAAA,OAAA;;AAKEA,aALF,OAAA,GAKEA;8BALF,OAAA;;AAMIC,mCANJ,OAAA,6CAMYA;AAERA,YAAIA,CAACA,EAAEA,GAAGA,EAAEA,CAACA;AACbA,YAAIA,CAACA,IAAIA,GAAGA,aAAaA,CAACA;AAC1BA,YAAIA,CAACA,iBAAiBA,GAAGA,IAAIA,CAACA;AAE9BA,YAAIA,CAACA,MAAMA,GAAGA,CACdhBA;;iBA7CH,OAAA;;eAiDaD,qBAACA,IAAIA,EAAAA;AACdE,gBAAIA,OAAOA,IAAIA,CAACA,OAAOA,IAAIA,WAAWA,EAAEA;AACtCA,oBAAIA,CAACA,OAAOA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,MAAMA,EAAEA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,MAAMA,CAACA,CAACA;aAC/DA;AAEDA,gBAAIA,IAAIA,CAACA,OAAOA,IAAIA,IAAIA,CAACA,YAAYA,EAAEA;AACrCA,oBAAIA,CAACA,OAAOA,GAAGA,CAACA,CAACA;aAClBA;AAEDA,gBAAIA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;AACvCA,gBAAIA,CAACA,OAAOA,IAAIA,IAAIA,CAACA,KAAKA,CAACA;SAC5BA;;;eAIWF,wBAAAA;AAEVG,8BAAKA,SAASA,CAACA,UAAUA,GAAGA,YAAAA;AAAY,uBAAO,IAAI,CAAC;aAAC,CAACA;SACvDA;;;eAEOH,oBAAAA;AAENI,8BAAKA,SAASA,CAACA,UAAUA,GAAGA,MAAMA,CAACA;SACpCA;;;eAEKJ,gBAACA,UAAUA,EAAAA;AACfK,gBAAIA,KAAKA,EAAEA,IAAIA,CAACA;AAEhBA,iBAAKA,IAAIA,CAACA,IAAIA,UAAUA,CAACA,KAAKA,EAAEA;AAC9BA,oBAAIA,GAAGA,UAAUA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;AAE3BA,oBAAIA,CAACA,IAAIA,EAAEA;AACTA,6BAASA;iBACVA;AAEDA,oBAAIA,CAACA,WAAWA,CAACA,IAAIA,CAACA,CAACA;aACxBA;SACFA;;;WAtFH,OAAA;;;qBAAA,OAAA","file":"gamemodes/Rainbow.js","sourcesContent":["import FFA from './FFA';\nimport {Food} from '../entity/index';\nimport {Color} from '../HelperDefs/index';\nvar FoodUp = require('../entity/Food').prototype.sendUpdate;\n\nexport default class Rainbow extends FFA{\n  colors: Color[];\n  colorsLength: number;\n  speed: number;\n\n  constructor(){\n    super();\n\n    this.ID = 20;\n    this.name = \"Rainbow FFA\";\n    this.specByLeaderboard = true;\n\n    this.colors = [\n    {'r':255, 'g':  0, 'b':  0}, // Red\n    {'r':255, 'g': 32, 'b':  0},\n    {'r':255, 'g': 64, 'b':  0},\n    {'r':255, 'g': 96, 'b':  0},\n    {'r':255, 'g':128, 'b':  0}, // Orange\n    {'r':255, 'g':160, 'b':  0},\n    {'r':255, 'g':192, 'b':  0},\n    {'r':255, 'g':224, 'b':  0},\n    {'r':255, 'g':255, 'b':  0}, // Yellow\n    {'r':192, 'g':255, 'b':  0},\n    {'r':128, 'g':255, 'b':  0},\n    {'r': 64, 'g':255, 'b':  0},\n    {'r':  0, 'g':255, 'b':  0}, // Green\n    {'r':  0, 'g':192, 'b': 64},\n    {'r':  0, 'g':128, 'b':128},\n    {'r':  0, 'g': 64, 'b':192},\n    {'r':  0, 'g':  0, 'b':255}, // Blue\n    {'r': 18, 'g':  0, 'b':192},\n    {'r': 37, 'g':  0, 'b':128},\n    {'r': 56, 'g':  0, 'b': 64},\n    {'r': 75, 'g':  0, 'b':130}, // Indigo\n    {'r': 92, 'g':  0, 'b':161},\n    {'r':109, 'g':  0, 'b':192},\n    {'r':126, 'g':  0, 'b':223},\n    {'r':143, 'g':  0, 'b':255}, // Purple\n    {'r':171, 'g':  0, 'b':192},\n    {'r':199, 'g':  0, 'b':128},\n    {'r':227, 'g':  0, 'b': 64},\n    ];\n    this.colorsLength = this.colors.length -1;\n    this.speed = 1; // Speed of color change\n\n  }\n\n  // Gamemode Specific Functions\n\n  changeColor(node) {\n    if (typeof node.rainbow == 'undefined') {\n      node.rainbow = Math.floor(Math.random() * this.colors.length);\n    }\n\n    if (node.rainbow >= this.colorsLength) {\n      node.rainbow = 0;\n    }\n\n    node.color = this.colors[node.rainbow];\n    node.rainbow += this.speed;\n  }\n\n  // Override\n\n  onServerInit() {\n    // Overrides the update function\n    Food.prototype.sendUpdate = function() {return true;};\n  }\n\n  onChange() {\n    // Reset\n    Food.prototype.sendUpdate = FoodUp;\n  }\n\n  onTick(gameServer) {\n    var color, node;\n    // Change color\n    for (var i in gameServer.nodes) {\n      node = gameServer.nodes[i];\n\n      if (!node) {\n        continue;\n      }\n\n      this.changeColor(node);\n    }\n  }\n}\n"],"sourceRoot":"/source/"}