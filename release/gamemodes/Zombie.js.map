{"version":3,"sources":["gamemodes/Zombie.ts"],"names":["Zombie","Zombie.constructor","Zombie.leaderboardAddSort","Zombie.makeZombie","Zombie.onPlayerSpawn","Zombie.onCellAdd","Zombie.onCellRemove","Zombie.onCellMove","Zombie.updateLB"],"mappings":";;;;;;;;;;;;;;;;qBAAiB,QAAQ;;;;IAIzB,MAAA;cAAA,MAAA;;AAKEA,aALF,MAAA,GAKEA;8BALF,MAAA;;AAMIC,mCANJ,MAAA,6CAMYA;AAERA,YAAIA,CAACA,EAAEA,GAAGA,EAAEA,CAACA;AACbA,YAAIA,CAACA,IAAIA,GAAGA,YAAYA,CAACA;AACzBA,YAAIA,CAACA,SAASA,GAAGA,IAAIA,CAACA;AACtBA,YAAIA,CAACA,WAAWA,GAAGA,EAACA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAACA,CAACA;AAClDA,YAAIA,CAACA,OAAOA,GAAGA,EAAEA,CAACA;AAClBA,YAAIA,CAACA,OAAOA,GAAGA,EAAEA,CAACA;KAEnBA;;iBAfH,MAAA;;eAmBoBD,4BAACA,MAAMA,EAACA,WAAWA,EAAAA;AAEnCE,gBAAIA,GAAGA,GAAGA,WAAWA,CAACA,MAAMA,GAAGA,CAACA,CAACA;AACjCA,gBAAIA,IAAIA,GAAGA,IAAIA,CAACA;AAChBA,mBAAOA,AAACA,GAAGA,IAAIA,CAACA,IAAMA,IAAIA,AAACA,EAAEA;AAE3BA,oBAAIA,MAAMA,CAACA,QAAQA,CAACA,KAAKA,CAACA,IAAIA,WAAWA,CAACA,GAAGA,CAACA,CAACA,QAAQA,CAACA,KAAKA,CAACA,EAAEA;AAC9DA,+BAAWA,CAACA,MAAMA,CAACA,GAAGA,GAAGA,CAACA,EAAEA,CAACA,EAAEA,MAAMA,CAACA,CAACA;AACvCA,wBAAIA,GAAGA,KAAKA,CAACA;iBACdA;AACDA,mBAAGA,EAAEA,CAACA;aACPA;AACDA,gBAAIA,IAAIA,EAAEA;AAERA,2BAAWA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,EAACA,MAAMA,CAACA,CAACA;aACjCA;SACFA;;;eAESF,oBAACA,MAAMA,EAAAA;AAEfG,kBAAMA,CAACA,IAAIA,GAAGA,CAACA,CAACA;AAChBA,kBAAMA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,WAAWA,CAACA;AAChCA,iBAAIA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,MAAMA,CAACA,KAAKA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAACA;AAE1CA,oBAAIA,KAAKA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,OAAOA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;AAClDA,oBAAGA,KAAKA,IAAIA,CAACA,CAACA,EAAEA;AACdA,wBAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA;iBAC/BA;AAEDA,sBAAMA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,WAAWA,CAACA;AAEzCA,oBAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;aACpCA;SACFA;;;eAIYH,uBAACA,UAAUA,EAACA,MAAMA,EAAAA;AAE7BI,gBAAGA,IAAIA,CAACA,OAAOA,CAACA,MAAMA,IAAIA,CAACA,EAAEA;AAC3BA,sBAAMA,CAACA,IAAIA,GAAGA,CAACA,CAACA;AAChBA,sBAAMA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,WAAWA,CAACA;aACjCA,MAAMA;AAELA,sBAAMA,CAACA,IAAIA,GAAGA,MAAMA,CAACA,GAAGA,CAACA;AACzBA,sBAAMA,CAACA,KAAKA,GAAGA,UAAUA,CAACA,cAAcA,EAAEA,CAACA;aAC5CA;AAGDA,sBAAUA,CAACA,WAAWA,CAACA,MAAMA,CAACA,CAACA;SAChCA;;;eAEQJ,mBAACA,IAAIA,EAAAA;AAEZK,gBAAGA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,EAAEA;AAC5BA,oBAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;aACzBA,MAAMA;AACLA,oBAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;aACzBA;SACFA;;;eAEWL,sBAACA,IAAIA,EAAAA;AAEfM,gBAAGA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,EAAEA;AAC5BA,oBAAIA,KAAKA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;AACvCA,oBAAGA,KAAKA,IAAIA,CAACA,CAACA,EAAEA;AACdA,wBAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA;iBAC/BA;aACFA,MAAMA;AACLA,oBAAIA,KAAKA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;AACvCA,oBAAGA,KAAKA,IAAIA,CAACA,CAACA,EAAEA;AACdA,wBAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA;iBAC/BA;aACFA;SACFA;;;eAESN,oBAACA,EAAEA,EAACA,EAAEA,EAACA,IAAIA,EAAAA;AACnBO,gBAAIA,IAAIA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,EAAEA,CAACA;AAChCA,gBAAIA,CAACA,GAAGA,IAAIA,CAACA,OAAOA,EAAEA,CAACA;AAGvBA,iBAAKA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,YAAYA,CAACA,MAAMA,EAACA,CAACA,EAAEA,EAAEA;AAEtDA,oBAAIA,KAAKA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,YAAYA,CAACA,CAACA,CAACA,CAACA;AAEvCA,oBAAIA,AAACA,KAAKA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,IAAMA,IAAIA,CAACA,KAAKA,IAAIA,KAAKA,CAACA,KAAKA,AAACA,EAACA;AACxDA,6BAASA;iBACVA;AAGDA,oBAAIA,KAAKA,CAACA,KAAKA,CAACA,OAAOA,EAAEA,IAAIA,IAAIA,IAAIA,KAAKA,CAACA,KAAKA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,IAAIA,IAAIA,IAAIA,CAACA,EAAEA;AAE5EA,wBAAIA,aAAaA,GAAGA,KAAKA,CAACA,OAAOA,EAAEA,GAAGA,CAACA,CAACA;AACxCA,wBAAIA,IAAIA,CAACA,aAAaA,CAACA,KAAKA,EAAEA,aAAaA,CAACA,EAAEA;AAE5CA,iCAASA;qBACVA;AAGDA,wBAAIA,IAAIA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,EAAEA,IAAIA,CAACA,QAAQA,CAACA,CAACA,EAAEA,KAAKA,CAACA,QAAQA,CAACA,CAACA,EAAEA,KAAKA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;AAG9FA,wBAAIA,IAAIA,GAAGA,aAAaA,EAAEA;AACxBA,4BAAIA,KAAKA,CAACA,KAAKA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,IAAIA,IAAIA,IAAIA,CAACA,EAACA;AAE1CA,gCAAIA,CAACA,UAAUA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;yBAC7BA,MAAKA,IAAGA,IAAIA,IAAIA,CAACA,IAAIA,KAAKA,CAACA,KAAKA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,EAACA;AAE/CA,gCAAIA,CAACA,UAAUA,CAACA,KAAKA,CAACA,KAAKA,CAACA,CAACA;yBAC9BA;AAEDA,4BAAIA,SAASA,GAAGA,KAAKA,CAACA,QAAQA,CAACA,CAACA,GAAGA,EAAEA,CAACA;AACtCA,4BAAIA,SAASA,GAAGA,KAAKA,CAACA,QAAQA,CAACA,CAACA,GAAGA,EAAEA,CAACA;AACtCA,4BAAIA,QAAQA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,SAASA,EAAEA,SAASA,CAACA,CAACA;AAEhDA,4BAAIA,IAAIA,GAAGA,aAAaA,GAAGA,IAAIA,CAACA;AAEhCA,6BAAKA,CAACA,QAAQA,CAACA,CAACA,GAAGA,KAAKA,CAACA,QAAQA,CAACA,CAACA,GAAKA,IAAIA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,QAAQA,CAACA,AAAEA,IAAIA,CAACA,CAACA;AACzEA,6BAAKA,CAACA,QAAQA,CAACA,CAACA,GAAGA,KAAKA,CAACA,QAAQA,CAACA,CAACA,GAAKA,IAAIA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,QAAQA,CAACA,AAAEA,IAAIA,CAACA,CAACA;qBAC1EA;iBACFA;aACFA;SACFA;;;eAEOP,kBAACA,UAAUA,EAAAA;AACjBQ,gBAAIA,EAAEA,GAAGA,UAAUA,CAACA,WAAWA,CAACA;AAEhCA,iBAAKA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,UAAUA,CAACA,OAAOA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA;AAClDA,oBAAIA,OAAOA,UAAUA,CAACA,OAAOA,CAACA,CAACA,CAACA,IAAIA,WAAWA,IAAIA,UAAUA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,aAAaA,CAACA,IAAIA,IAAIA,CAACA,EAAEA;AAChGA,6BAASA;iBACVA;AAEDA,oBAAIA,MAAMA,GAAGA,UAAUA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,aAAaA,CAACA;AACjDA,oBAAIA,WAAWA,GAAGA,MAAMA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA;AACxCA,oBAAIA,MAAMA,CAACA,KAAKA,CAACA,MAAMA,IAAIA,CAACA,EAAEA;AAC5BA,6BAASA;iBACVA;AAEDA,oBAAIA,EAAEA,CAACA,MAAMA,IAAIA,CAACA,EAAEA;AAElBA,sBAAEA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;AAChBA,6BAASA;iBACVA,MAAMA,IAAIA,EAAEA,CAACA,MAAMA,GAAGA,EAAEA,EAAEA;AACzBA,wBAAIA,CAACA,kBAAkBA,CAACA,MAAMA,EAACA,EAAEA,CAACA,CAACA;iBACpCA,MAAMA;AAELA,wBAAIA,WAAWA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA,KAAKA,CAACA,EAAEA;AACvCA,0BAAEA,CAACA,GAAGA,EAAEA,CAACA;AACTA,4BAAIA,CAACA,kBAAkBA,CAACA,MAAMA,EAACA,EAAEA,CAACA,CAACA;qBACpCA;iBACFA;aACFA;AAEDA,gBAAIA,CAACA,OAAOA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA;SACtBA;;;WA7KH,MAAA;;;qBAAA,MAAA","file":"gamemodes/Zombie.js","sourcesContent":["import Mode from './Mode';\nimport {Color} from '../HelperDefs/index';\n\n\nexport default class Zombie extends Mode{\n  zombieColor: Color;\n  zombies: any[];\n  players: any[];\n\n  constructor(){\n    super();\n\n    this.ID = 12;\n    this.name = \"Zombie FFA\";\n    this.haveTeams = true;\n    this.zombieColor = {'r': 223, 'g': 223, 'b': 223};\n    this.zombies = [];\n    this.players = [];\n\n  }\n\n  // Gamemode Specific Functions\n\n  leaderboardAddSort(player,leaderboard) {\n    // Adds the player and sorts the leaderboard\n    var len = leaderboard.length - 1;\n    var loop = true;\n    while ((len >= 0) && (loop)) {\n      // Start from the bottom of the leaderboard\n      if (player.getScore(false) <= leaderboard[len].getScore(false)) {\n        leaderboard.splice(len + 1, 0, player);\n        loop = false; // End the loop if a spot is found\n      }\n      len--;\n    }\n    if (loop) {\n      // Add to top of the list because no spots were found\n      leaderboard.splice(0, 0,player);\n    }\n  }\n\n  makeZombie(player) {\n    // turns a player into a zombie\n    player.team = 0;\n    player.color = this.zombieColor;\n    for(var i = 0; i < player.cells.length; i++){\n      // remove cell from players array\n      var index = this.players.indexOf(player.cells[i]);\n      if(index != -1) {\n        this.players.splice(index, 1);\n      }\n      // change color of cell\n      player.cells[i].color = this.zombieColor;\n      // add cell to zombie array\n      this.zombies.push(player.cells[i]);\n    }\n  }\n\n  // Override\n\n  onPlayerSpawn(gameServer,player) {\n    // make player a zombie if there are none\n    if(this.zombies.length == 0) {\n      player.team = 0;\n      player.color = this.zombieColor;\n    } else {\n      // use player id as team so that bots are still able to fight (even though they probably turn into zombies very fast)\n      player.team = player.pID;\n      player.color = gameServer.getRandomColor();\n    }\n\n    // Spawn player\n    gameServer.spawnPlayer(player);\n  }\n\n  onCellAdd(cell) {\n    // Add to team list\n    if(cell.owner.getTeam() == 0) {\n      this.zombies.push(cell);\n    } else {\n      this.players.push(cell);\n    }\n  }\n\n  onCellRemove(cell) {\n    // Remove from team list\n    if(cell.owner.getTeam() == 0) {\n      var index = this.zombies.indexOf(cell);\n      if(index != -1) {\n        this.zombies.splice(index, 1);\n      }\n    } else {\n      var index = this.players.indexOf(cell);\n      if(index != -1) {\n        this.players.splice(index, 1);\n      }\n    }\n  }\n\n  onCellMove(x1,y1,cell) {\n    var team = cell.owner.getTeam();\n    var r = cell.getSize();\n\n    // Find team\n    for (var i = 0; i < cell.owner.visibleNodes.length;i++) {\n      // Only collide with player cells\n      var check = cell.owner.visibleNodes[i];\n\n      if ((check.getType() != 0) || (cell.owner == check.owner)){\n        continue;\n      }\n\n      // Collision with zombies\n      if (check.owner.getTeam() == team || check.owner.getTeam() == 0 || team == 0) {\n        // Check if in collision range\n        var collisionDist = check.getSize() + r; // Minimum distance between the 2 cells\n        if (cell.simpleCollide(check, collisionDist)) {\n          // Skip\n          continue;\n        }\n\n        // First collision check passed... now more precise checking\n        var dist = cell.getDist(cell.position.x, cell.position.y, check.position.x, check.position.y);\n\n        // Calculations\n        if (dist < collisionDist) { // Collided\n          if (check.owner.getTeam() == 0 && team != 0){\n            // turn player into zombie\n            this.makeZombie(cell.owner);\n          }else if(team == 0 && check.owner.getTeam() != 0){\n            // turn other player into zombie\n            this.makeZombie(check.owner);\n          }\n          // The moving cell pushes the colliding cell\n          var newDeltaY = check.position.y - y1;\n          var newDeltaX = check.position.x - x1;\n          var newAngle = Math.atan2(newDeltaX, newDeltaY);\n\n          var move = collisionDist - dist;\n\n          check.position.x = check.position.x + ( move * Math.sin(newAngle) ) >> 0;\n          check.position.y = check.position.y + ( move * Math.cos(newAngle) ) >> 0;\n        }\n      }\n    }\n  }\n\n  updateLB(gameServer) {\n    var lb = gameServer.leaderboard;\n    // Loop through all clients\n    for (var i = 0; i < gameServer.clients.length; i++) {\n      if (typeof gameServer.clients[i] == \"undefined\" || gameServer.clients[i].playerTracker.team == 0) {\n        continue;\n      }\n\n      var player = gameServer.clients[i].playerTracker;\n      var playerScore = player.getScore(true);\n      if (player.cells.length <= 0) {\n        continue;\n      }\n\n      if (lb.length == 0) {\n        // Initial player\n        lb.push(player);\n        continue;\n      } else if (lb.length < 10) {\n        this.leaderboardAddSort(player,lb);\n      } else {\n        // 10 in leaderboard already\n        if (playerScore > lb[9].getScore(false)) {\n          lb.pop();\n          this.leaderboardAddSort(player,lb);\n        }\n      }\n    }\n\n    this.rankOne = lb[0];\n  }\n\n}\n"],"sourceRoot":"/source/"}