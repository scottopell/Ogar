{"version":3,"sources":["ai/BotPlayer.ts"],"names":["BotPlayer","BotPlayer.constructor","BotPlayer.getLowestCell","BotPlayer.updateSightRange","BotPlayer.update","BotPlayer.clearLists","BotPlayer.getState","BotPlayer.decide","BotPlayer.findNearest","BotPlayer.getRandom","BotPlayer.combineVectors","BotPlayer.getBiggest","BotPlayer.findNearbyVirus","BotPlayer.getDist","BotPlayer.getAccDist","BotPlayer.getAngle","BotPlayer.reverseAngle"],"mappings":"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","file":"ai/BotPlayer.js","sourcesContent":["import PlayerTracker from '../PlayerTracker';\nimport GameServer from '../GameServer';\nimport { Position } from '../HelperDefs/index';\n\nexport default class BotPlayer extends PlayerTracker{\n  gameState: number;\n  path: any[];\n\n  // List of cells that can eat this bot\n  predators: any[];\n\n  // List of cells that can eat this bot but are too far away\n  threats: any[];\n\n  // List of cells that can be eaten by this bot\n  prey: any[];\n\n  // Not used - Bots will attempt to eat this regardless of nearby prey/predators\n  food: any[];\n\n  foodImportant: any[];\n  virus: any[];\n\n  juke: boolean;\n  target: any;\n  //virus?\n  targetVirus: any;\n  ejectMass: number;\n  oldPos: Position;\n\n  constructor(gameServer: GameServer, socket){\n    super(gameServer, socket);\n\n    // AI only\n    this.gameState = 0;\n    this.path = [];\n\n    this.predators = [];\n    this.threats = [];\n    this.prey = [];\n    this.food = [];\n    this.foodImportant = [];\n    this.virus = [];\n\n    this.juke = false;\n\n    this.target;\n    this.targetVirus; // Virus used to shoot into the target\n\n    this.ejectMass = 0; // Amount of times to eject mass\n    this.oldPos = {x: 0, y:0};\n  }\n\n  // Functions\n\n  getLowestCell() {\n    // Gets the cell with the lowest mass\n    if (this.cells.length <= 0) {\n      return null; // Error!\n    }\n\n    // Starting cell\n    var lowest = this.cells[0];\n    for (var i = 1; i < this.cells.length; i++) {\n      if (lowest.mass > this.cells[i].mass) {\n        lowest = this.cells[i];\n      }\n    }\n    return lowest;\n  }\n\n  // Override\n\n  updateSightRange() { // For view distance\n    var range = 1000; // Base sight range\n\n    if (this.cells[0]) {\n      range += this.cells[0].getSize() * 2.5;\n    }\n\n    this.sightRangeX = range;\n    this.sightRangeY = range;\n  }\n\n  // Overrides the update function from player tracker\n  update() {\n    // Remove nodes from visible nodes if possible\n    for (var i = 0; i < this.nodeDestroyQueue.length; i++) {\n      var index = this.visibleNodes.indexOf(this.nodeDestroyQueue[i]);\n      if (index > -1) {\n        this.visibleNodes.splice(index, 1);\n      }\n    }\n\n    // Update every 500 ms\n    if ((this.tickViewBox <= 0) && (this.gameServer.run)) {\n      this.visibleNodes = this.calcViewBox();\n      this.tickViewBox = 10;\n    } else {\n      this.tickViewBox--;\n      return;\n    }\n\n    // Respawn if bot is dead\n    if (this.cells.length <= 0) {\n      this.gameServer.gameMode.onPlayerSpawn(this.gameServer,this);\n      if (this.cells.length == 0) {\n        // If the bot cannot spawn any cells, then disconnect it\n        this.socket.close();\n        return;\n      }\n    }\n\n    // Calc predators/prey\n    var cell = this.getLowestCell();\n    var r = cell.getSize();\n    this.clearLists();\n\n    // Ignores targeting cells below this mass\n    var ignoreMass = Math.min((cell.mass / 10), 150);\n\n    // Loop\n    for (let i in this.visibleNodes) {\n      var check = this.visibleNodes[i];\n\n      // Cannot target itself\n      if ((!check) || (cell.owner == check.owner)){\n        continue;\n      }\n\n      var t = check.getType();\n      switch (t) {\n        case 0:\n          // Cannot target teammates\n          if (this.gameServer.gameMode.haveTeams) {\n            if (check.owner.team == this.team) {\n              continue;\n            }\n          }\n\n          // Check for danger\n          if (cell.mass > (check.mass * 1.25)) {\n            // Add to prey list\n            this.prey.push(check);\n          } else if (check.mass > (cell.mass * 1.25)) {\n            // Predator\n            var dist = this.getDist(cell, check) - (r + check.getSize());\n            if (dist < 300) {\n              this.predators.push(check);\n              if ((this.cells.length == 1) && (dist < 0)) {\n                this.juke = true;\n              }\n            }\n            this.threats.push(check);\n          } else {\n            this.threats.push(check);\n          }\n          break;\n        case 1:\n          this.food.push(check);\n          break;\n        case 2: // Virus\n          this.virus.push(check);\n          break;\n        case 3: // Ejected mass\n          if (cell.mass > 20) {\n            this.food.push(check);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    // Get gamestate\n    var newState = this.getState(cell);\n    if ((newState != this.gameState) && (newState != 4)) {\n      // Clear target\n      this.target = null;\n    }\n    this.gameState = newState;\n\n    // Action\n    this.decide(cell);\n\n    this.nodeDestroyQueue = []; // Empty\n\n  }\n\n  // Custom\n\n  clearLists() {\n    this.predators = [];\n    this.threats = [];\n    this.prey = [];\n    this.food = [];\n    this.virus = [];\n    this.juke = false;\n  }\n\n  getState(cell) {\n    // Continue to shoot viruses\n    if (this.gameState == 4) {\n      return 4;\n    }\n\n    // Check for predators\n    if (this.predators.length <= 0) {\n      if (this.prey.length > 0) {\n        return 3;\n      } else if (this.food.length > 0) {\n        return 1;\n      }\n    } else if (this.threats.length > 0) {\n      if ((this.cells.length == 1) && (cell.mass > 180)) {\n        var t = this.getBiggest(this.threats);\n        var tl = this.findNearbyVirus(t,500,this.virus);\n        if (tl != false) {\n          this.target = t;\n          this.targetVirus = tl;\n          return 4;\n        }\n      } else {\n        // Run\n        return 2;\n      }\n    }\n\n    // Bot wanders by default\n    return 0;\n  }\n\n  decide(cell) {\n    // The bot decides what to do based on gamestate\n    switch (this.gameState) {\n      case 0: // Wander\n        //console.log(\"[Bot] \"+cell.getName()+\": Wandering\");\n        if ((this.centerPos.x == this.mouse.x) && (this.centerPos.y == this.mouse.y)) {\n          // Get a new position\n          var index = Math.floor(Math.random() * this.gameServer.nodes.length);\n          var randomNode = this.gameServer.nodes[index];\n          var pos = {x: 0, y: 0};\n\n          if ((randomNode.getType() == 3) || (randomNode.getType() == 1)) {\n            pos.x = randomNode.position.x;\n            pos.y = randomNode.position.y;\n          } else {\n            // Not a food/ejected cell\n            pos = this.gameServer.getRandomPosition();\n          }\n\n          // Set bot's mouse coords to this location\n          this.mouse = {x: pos.x, y: pos.y};\n        }\n        break;\n      case 1: // Looking for food\n        //console.log(\"[Bot] \"+cell.getName()+\": Getting Food\");\n        if ((!this.target) || (this.visibleNodes.indexOf(this.target) == -1)) {\n          // Food is eaten/out of sight... so find a new food cell to target\n          this.target = this.findNearest(cell,this.food);\n\n          this.mouse = {x: this.target.position.x, y: this.target.position.y};\n        }\n        break;\n      case 2: // Run from (potential) predators\n        var avoid = this.combineVectors(this.predators);\n        //console.log(\"[Bot] \"+cell.getName()+\": Fleeing from \"+avoid.getName());\n\n        // Find angle of vector between cell and predator\n        var deltaY = avoid.y - cell.position.y;\n        var deltaX = avoid.x - cell.position.x;\n        var angle = Math.atan2(deltaX,deltaY);\n\n        // Now reverse the angle\n        if (angle > Math.PI) {\n          angle -= Math.PI;\n        } else {\n          angle += Math.PI;\n        }\n\n        // Direction to move\n        var x1 = cell.position.x + (500 * Math.sin(angle));\n        var y1 = cell.position.y + (500 * Math.cos(angle));\n\n        this.mouse = {x: x1, y: y1};\n\n        // Cheating\n        if (cell.mass < 250) {\n          cell.mass += 1;\n        }\n\n        if (this.juke) {\n          // Juking\n          this.gameServer.splitCells(this);\n        }\n\n        break;\n      case 3: // Target prey\n        if ((!this.target) || (cell.mass < (this.target.mass * 1.25)) || (this.visibleNodes.indexOf(this.target) == -1)) {\n          this.target = this.getRandom(this.prey);\n        }\n        //console.log(\"[Bot] \"+cell.getName()+\": Targeting \"+this.target.getName());\n\n\n        this.mouse = {x: this.target.position.x, y: this.target.position.y};\n\n        var massReq = 1.25 * (this.target.mass * 2 ); // Mass required to splitkill the target\n\n        if ((cell.mass > massReq) && (this.cells.length == 1)) { // Will not split into more than 2 cells\n          var splitDist = (4 * (cell.getSpeed() * 5)) + (cell.getSize() * 1.75); // Distance needed to splitkill\n          var distToTarget = this.getAccDist(cell,this.target); // Distance between the target and this cell\n\n          if (splitDist >= distToTarget) {\n            if ((this.threats.length > 0) && (this.getBiggest(this.threats).mass > (1.25 * (cell.mass/2)))) {\n              // Dont splitkill when they are cells that can possibly eat you after the split\n              break;\n            }\n            // Splitkill\n            this.gameServer.splitCells(this);\n          }\n        }\n        break;\n      case 4: // Shoot virus\n        if (   (!this.target)\n            || (!this.targetVirus)\n            || (this.cells.length !== 1)\n            || (this.visibleNodes.indexOf(this.target) == -1)\n            || (this.visibleNodes.indexOf(this.targetVirus) == -1)) {\n          this.gameState = 0; // Reset\n          this.target = null;\n          break;\n        }\n\n        // Make sure target is within range\n        var dist = this.getDist(this.targetVirus,this.target) - (this.target.getSize() + 100);\n        if (dist > 500) {\n          this.gameState = 0; // Reset\n          this.target = null;\n          break;\n        }\n\n        // Find angle of vector between target and virus\n        var angle = this.getAngle(this.target,this.targetVirus);\n\n        // Now reverse the angle\n        var reversed = this.reverseAngle(angle);\n\n        // Get this bot cell's angle\n        var ourAngle = this.getAngle(cell,this.targetVirus);\n\n        // Check if bot cell is in position\n        if ((ourAngle <= (reversed + .25) ) && (ourAngle >= (reversed - .25) )) {\n          // In position!\n          this.mouse = {x: this.targetVirus.position.x, y: this.targetVirus.position.y};\n\n          // Shoot\n          for (var v = 0; v < 7 ;v++) {\n            this.gameServer.ejectMass(this);\n          }\n\n          // Back to starting pos\n          this.mouse = {x: cell.position.x, y: cell.position.y};\n\n          // Cleanup\n          this.gameState = 0; // Reset\n          this.target = null;\n        } else {\n          // Move to position\n          let r = cell.getSize();\n          let x1 = this.targetVirus.position.x + ((350 + r) * Math.sin(reversed));\n          let y1 = this.targetVirus.position.y + ((350 + r) * Math.cos(reversed));\n          this.mouse = {x: x1, y: y1};\n        }\n\n        // console.log(\"[Bot] \"+cell.getName()+\": Targeting (virus) \"+this.target.getName());\n        break;\n      default:\n        //console.log(\"[Bot] \"+cell.getName()+\": Idle \"+this.gameState);\n        this.gameState = 0;\n        break;\n    }\n\n    // Recombining\n    if (this.cells.length > 1) {\n      var r = 0;\n      // Get amount of cells that can merge\n      for (var i in this.cells) {\n        if (this.cells[i].recombineTicks == 0) {\n          r++;\n        }\n      }\n      // Merge\n      if (r >= 2) {\n        this.mouse.x = this.centerPos.x;\n        this.mouse.y = this.centerPos.y;\n      }\n    }\n  }\n\n  // Finds the nearest cell in list\n  findNearest(cell,list) {\n\n    /* TODO figure out what this.currentTarget is supposed to be and where it\n     * is supposed to be set\n    if (this.currentTarget) {\n      // Do not check for food if target already exists\n      return null;\n    }\n    */\n\n    // Check for nearest cell in list\n    var shortest = list[0];\n    var shortestDist = this.getDist(cell,shortest);\n    for (var i = 1; i < list.length; i++) {\n      var check = list[i];\n      var dist = this.getDist(cell,check);\n      if (shortestDist > dist) {\n        shortest = check;\n        shortestDist = dist;\n      }\n    }\n\n    return shortest;\n  }\n\n  getRandom(list) {\n    // Gets a random cell from the array\n    var n = Math.floor(Math.random() * list.length);\n    return list[n];\n  }\n\n  combineVectors(list) {\n    // Gets the angles of all enemies approaching the cell\n    var pos = {x: 0, y: 0};\n    var check;\n    for (var i = 0; i < list.length; i++) {\n      check = list[i];\n      pos.x += check.position.x;\n      pos.y += check.position.y;\n    }\n\n    // Get avg\n    pos.x = pos.x/list.length;\n    pos.y = pos.y/list.length;\n\n    return pos;\n  }\n\n  getBiggest(list) {\n    // Gets the biggest cell from the array\n    var biggest = list[0];\n    for (var i = 1; i < list.length; i++) {\n      var check = list[i];\n      if (check.mass > biggest.mass) {\n        biggest = check;\n      }\n    }\n\n    return biggest;\n  }\n\n  findNearbyVirus(cell,checkDist,list) {\n    var r = cell.getSize() + 100; // Gets radius + virus radius\n    for (var i = 0; i < list.length; i++) {\n      var check = list[i];\n      var dist = this.getDist(cell,check) - r;\n      if (checkDist > dist) {\n        return check;\n      }\n    }\n    return false; // Returns a bool if no nearby viruses are found\n  }\n\n  getDist(cell,check) {\n    // Fastest distance - I have a crappy computer to test with :(\n    var xd = (check.position.x - cell.position.x);\n    xd = xd < 0 ? xd * -1 : xd; // Math.abs is slow\n\n    var yd = (check.position.y - cell.position.y);\n    yd = yd < 0 ? yd * -1 : yd; // Math.abs is slow\n\n    return (xd + yd);\n  }\n\n  getAccDist(cell,check) {\n    // Accurate Distance\n    var xs = check.position.x - cell.position.x;\n    xs = xs * xs;\n\n    var ys = check.position.y - cell.position.y;\n    ys = ys * ys;\n\n    return Math.sqrt( xs + ys );\n  }\n\n  getAngle(c1,c2) {\n    var deltaY = c1.position.y - c2.position.y;\n    var deltaX = c1.position.x - c2.position.x;\n    return Math.atan2(deltaX,deltaY);\n  }\n\n  reverseAngle(angle) {\n    if (angle > Math.PI) {\n      angle -= Math.PI;\n    } else {\n      angle += Math.PI;\n    }\n    return angle;\n  }\n\n}\n"],"sourceRoot":"/source/"}