{"version":3,"sources":["GameServer.ts"],"names":["GameServer","GameServer.constructor","GameServer.start","GameServer.start.err","GameServer.start.connectionEstablished","GameServer.start.connectionEstablished.close","GameServer.getMode","GameServer.getNextNodeId","GameServer.getNewPlayerID","GameServer.getRandomPosition","GameServer.getRandomSpawn","GameServer.getRandomColor","GameServer.addNode","GameServer.removeNode","GameServer.cellTick","GameServer.spawnTick","GameServer.gamemodeTick","GameServer.cellUpdateTick","GameServer.mainLoop","GameServer.updateClients","GameServer.startingFood","GameServer.updateFood","GameServer.spawnFood","GameServer.spawnPlayer","GameServer.virusCheck","GameServer.updateMoveEngine","GameServer.setAsMovingNode","GameServer.splitCells","GameServer.ejectMass","GameServer.newCellVirused","GameServer.shootVirus","GameServer.getCellsInRange","GameServer.getNearestVirus","GameServer.updateCells","GameServer.loadConfig","GameServer.switchSpectator","GameServer.startStatsServer","GameServer.getStats","getBuf"],"mappings":"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","file":"GameServer.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n// Library imports\nimport * as WebSocket from 'ws';\nimport * as http from 'http';\nimport * as fs  from 'fs';\n\nimport * as ini from './modules/ini';\n\n// Project imports\nimport * as Packet from './packet/index';\nimport * as Gamemode from './gamemodes/index';\n\nimport {Cell, PlayerCell, Food, Virus, EjectedMass}  from './entity/index';\nimport PlayerTracker from './PlayerTracker';\nimport PacketHandler from './PacketHandler';\nimport Mode from './gamemodes/Mode';\nimport BotLoader from './ai/BotLoader';\nimport Logger from './modules/log';\nimport Config from './config';\n\n// GameServer implementation\nexport default class GameServer {\n  // Startup\n  run: boolean;\n  lastNodeId: number;\n  lastPlayerId: number;\n  clients: any[];\n  nodes: any[];\n  // Virus nodes\n  nodesVirus: Virus[];\n  // Ejected mass nodes\n  nodesEjected: Cell[];\n  // Nodes controlled by players\n  nodesPlayer: PlayerCell[];\n\n  currentFood: number;\n  movingNodes: any[];\n  leaderboard: any[];\n  lb_packet: ArrayBuffer;\n  bots: BotLoader;\n  log: Logger;\n  commands: any;\n  time: number;\n  startTime: number;\n  // 1 second ticks of mainLoop\n  tick: number;\n  // 50 ms ticks, 20 of these = 1 leaderboard update\n  tickMain: number;\n  // Used with spawning food\n  tickSpawn: number;\n\n  gameMode: Mode;\n  config: Config;\n  colors: any[];\n\n  socketServer: WebSocket.Server;\n\n  stats: any;\n  httpServer: any; // should be httpServer\n\n  constructor(){\n\n    this.run = true;\n    this.lastNodeId = 1;\n    this.lastPlayerId = 1;\n    this.clients = [];\n    this.nodes = [];\n    this.nodesVirus = [];\n    this.nodesEjected = [];\n    this.nodesPlayer = [];\n\n    this.currentFood = 0;\n    this.movingNodes = []; // For move engine\n    this.leaderboard = [];\n    this.lb_packet = new ArrayBuffer(0); // Leaderboard packet\n\n    this.bots = new BotLoader(this);\n    this.log = new Logger();\n    this.commands; // Command handler\n\n    // Main loop tick\n    this.time = +new Date;\n    this.startTime = this.time;\n    this.tick = 0; // 1 second ticks of mainLoop\n    this.tickMain = 0; // 50 ms ticks, 20 of these = 1 leaderboard update\n    this.tickSpawn = 0; // Used with spawning food\n\n    // Config\n    this.config = new Config();\n\n    // Parse config\n    this.loadConfig();\n\n    // Gamemodes\n    this.gameMode = Gamemode.get(this.config.serverGamemode);\n\n    // Colors\n    this.colors = [\n      {'r':235, 'g': 75, 'b':  0},\n      {'r':225, 'g':125, 'b':255},\n      {'r':180, 'g':  7, 'b': 20},\n      {'r': 80, 'g':170, 'b':240},\n      {'r':180, 'g': 90, 'b':135},\n      {'r':195, 'g':240, 'b':  0},\n      {'r':150, 'g': 18, 'b':255},\n      {'r': 80, 'g':245, 'b':  0},\n      {'r':165, 'g': 25, 'b':  0},\n      {'r': 80, 'g':145, 'b':  0},\n      {'r': 80, 'g':170, 'b':240},\n      {'r': 55, 'g': 92, 'b':255},\n    ];\n  }\n\n\n  start() {\n    // Logging\n    this.log.setup(this);\n\n    // Gamemode configurations\n    this.gameMode.onServerInit(this);\n\n    var serverCallback = function(){\n      // Spawn starting food\n      this.startingFood();\n\n      // Start Main Loop\n      setInterval(this.mainLoop.bind(this), 1);\n\n      // Done\n      console.log(\"[Game] Listening on port \" + this.config.serverPort);\n      console.log(\"[Game] Current game mode is \" + this.gameMode.name);\n\n      // Player bots (Experimental)\n      if (this.config.serverBots > 0) {\n        for (var i = 0;i < this.config.serverBots;i++) {\n          this.bots.addBot();\n        }\n        console.log(\"[Game] Loaded \"+this.config.serverBots+\" player bots\");\n      }\n    }\n\n    // Start the server\n    this.socketServer = new WebSocket.Server(\n        { port: this.config.serverPort, perMessageDeflate: false},\n        serverCallback.bind(this)\n    );\n\n    this.socketServer.on('connection', connectionEstablished.bind(this));\n\n    // Properly handle errors because some people are too lazy to read the readme\n    this.socketServer.on('error', function err(e) {\n      switch (e.name) {\n        case \"EADDRINUSE\":\n          console.log(\"[Error] EADDRINUSE. Server could not bind to port!\");\n          break;\n        case \"EACCES\":\n          console.log(\"[Error] EACCES. Tips:\\nUse ports above 1000\");\n          break;\n        default:\n          console.log(`[Error] Unhandled error code: ${e.name}`);\n          break;\n      }\n      process.exit(1); // Exits the program\n    });\n\n    function connectionEstablished(ws) {\n      // Server full\n      if (this.clients.length >= this.config.serverMaxConnections) {\n        ws.close();\n        return;\n      }\n\n      // ----- Client authenticity check code -----\n      // !!!!! WARNING !!!!!\n      // THE BELOW SECTION OF CODE CHECKS TO ENSURE THAT CONNECTIONS ARE COMING\n      // FROM THE OFFICIAL AGAR.IO CLIENT. IF YOU REMOVE OR MODIFY THE BELOW\n      // SECTION OF CODE TO ALLOW CONNECTIONS FROM A CLIENT ON A DIFFERENT DOMAIN,\n      // YOU MAY BE COMMITTING COPYRIGHT INFRINGEMENT AND LEGAL ACTION MAY BE TAKEN\n      // AGAINST YOU. THIS SECTION OF CODE WAS ADDED ON JULY 9, 2015 AT THE REQUEST\n      // OF THE AGAR.IO DEVELOPERS.\n      var origin = ws.upgradeReq.headers.origin;\n      if (origin != 'http://agar.io' && origin != 'https://agar.io'\n          && origin != 'http://localhost' && origin != 'https://localhost'\n          && origin != 'http://127.0.0.1' && origin != 'https://127.0.0.1') {\n        ws.close();\n      return;\n    }\n    // -----/Client authenticity check code -----\n\n    function close(error) {\n      // Log disconnections\n      this.server.log.onDisconnect(this.socket.remoteAddress);\n\n      var client = this.socket.playerTracker;\n      var len = this.socket.playerTracker.cells.length;\n      for (var i = 0; i < len; i++) {\n        var cell = this.socket.playerTracker.cells[i];\n\n        if (!cell) {\n          continue;\n        }\n\n        // Clear function so that the cell cant move\n        cell.calcMove = function() {return;};\n        //this.server.removeNode(cell);\n      }\n\n      client.disconnect = this.server.config.playerDisconnectTime * 20;\n      // Clear function so no packets are sent\n      this.socket.sendPacket = function() {return;};\n    }\n\n    ws.remoteAddress = ws._socket.remoteAddress;\n    ws.remotePort = ws._socket.remotePort;\n    this.log.onConnect(ws.remoteAddress); // Log connections\n\n    ws.playerTracker = new PlayerTracker(this, ws);\n    ws.packetHandler = new PacketHandler(this, ws);\n    ws.on('message', ws.packetHandler.handleMessage.bind(ws.packetHandler));\n\n    var bindObject = { server: this, socket: ws };\n    ws.on('error', close.bind(bindObject));\n    ws.on('close', close.bind(bindObject));\n    this.clients.push(ws);\n    }\n\n    this.startStatsServer(this.config.serverStatsPort);\n  }\n\n  getMode() {\n    return this.gameMode;\n  }\n\n  getNextNodeId() {\n    // Resets integer\n    // TODO\n    if (this.lastNodeId > 2147483647) {\n      this.lastNodeId = 1;\n    }\n    return this.lastNodeId++;\n  }\n\n  getNewPlayerID() {\n    // Resets integer\n    // TODO\n    if (this.lastPlayerId > 2147483647) {\n      this.lastPlayerId = 1;\n    }\n    return this.lastPlayerId++;\n  }\n\n  getRandomPosition() {\n    return {\n      x: Math.floor(Math.random() * (this.config.borderRight - this.config.borderLeft)) + this.config.borderLeft,\n      y: Math.floor(Math.random() * (this.config.borderBottom - this.config.borderTop)) + this.config.borderTop\n    };\n  }\n\n  getRandomSpawn() {\n    // Random spawns for players\n    var pos;\n\n    if (this.currentFood > 0) {\n      // Spawn from food\n      var node;\n      for (var i = (this.nodes.length - 1); i > -1; i--) {\n        // Find random food\n        node = this.nodes[i];\n\n        if (!node || node.inRange) {\n          // Skip if food is about to be eaten/undefined\n          continue;\n        }\n\n        if (node.getType() == 1) {\n          pos = {x: node.position.x,y: node.position.y};\n          this.removeNode(node);\n          break;\n        }\n      }\n    }\n\n    if (!pos) {\n      // Get random spawn if no food cell is found\n      pos = this.getRandomPosition();\n    }\n\n    return pos;\n  }\n\n  getRandomColor() {\n    var index = Math.floor(Math.random() * this.colors.length);\n    var color = this.colors[index];\n    return {\n      r: color.r,\n      b: color.b,\n      g: color.g\n    };\n  }\n\n  addNode(node) {\n    this.nodes.push(node);\n\n    // Adds to the owning player's screen\n    if (node.owner) {\n      node.setColor(node.owner.color);\n      node.owner.cells.push(node);\n      node.owner.socket.sendPacket(new Packet.AddNode(node));\n    }\n\n    // Special on-add actions\n    node.onAdd(this);\n\n    // Add to visible nodes\n    for (var i = 0; i < this.clients.length;i++) {\n      var client = this.clients[i].playerTracker;\n      if (!client) {\n        continue;\n      }\n\n      // client.nodeAdditionQueue is only used by human players, not bots\n      // for bots it just gets collected forever, using ever-increasing amounts of memory\n      if ('_socket' in client.socket && node.visibleCheck(client.viewBox,client.centerPos)) {\n        client.nodeAdditionQueue.push(node);\n      }\n    }\n  }\n\n  removeNode(node) {\n    // Remove from main nodes list\n    var index = this.nodes.indexOf(node);\n    if (index != -1) {\n      this.nodes.splice(index, 1);\n    }\n\n    // Remove from moving cells list\n    index = this.movingNodes.indexOf(node);\n    if (index != -1) {\n      this.movingNodes.splice(index, 1);\n    }\n\n    // Special on-remove actions\n    node.onRemove(this);\n\n    // Animation when eating\n    for (var i = 0; i < this.clients.length;i++) {\n      var client = this.clients[i].playerTracker;\n      if (!client) {\n        continue;\n      }\n\n      // Remove from client\n      client.nodeDestroyQueue.push(node);\n    }\n  }\n\n  cellTick() {\n    // Move cells\n    this.updateMoveEngine();\n  }\n\n  spawnTick() {\n    // Spawn food\n    this.tickSpawn++;\n    if (this.tickSpawn >= this.config.spawnInterval) {\n      this.updateFood(); // Spawn food\n      this.virusCheck(); // Spawn viruses\n\n      this.tickSpawn = 0; // Reset\n    }\n  }\n\n  gamemodeTick() {\n    // Gamemode tick\n    this.gameMode.onTick(this);\n  }\n\n  cellUpdateTick() {\n    // Update cells\n    this.updateCells();\n  }\n\n\n  mainLoop() {\n    // Timer\n    var local = new Date();\n    // TODO\n    this.tick += (+local - this.time);\n    this.time = +local;\n\n    if (this.tick >= 50) {\n      // Loop main functions\n      if (this.run) {\n        setTimeout(this.cellTick(), 0);\n        setTimeout(this.spawnTick(), 0);\n        setTimeout(this.gamemodeTick(), 0);\n      }\n\n      // Update the client's maps\n      this.updateClients();\n\n      // Update cells/leaderboard loop\n      this.tickMain++;\n      if (this.tickMain >= 20) { // 1 Second\n        setTimeout(this.cellUpdateTick(), 0);\n\n        // Update leaderboard with the gamemode's method\n        this.leaderboard = [];\n        this.gameMode.updateLB(this);\n        var lbPack = new Packet.UpdateLeaderboard(\n            this.leaderboard,\n            this.gameMode.packetLB);\n\n        this.lb_packet = lbPack.build();\n\n        this.tickMain = 0; // Reset\n      }\n\n      // Debug\n      //console.log(this.tick - 50);\n\n      // Reset\n      this.tick = 0;\n    }\n  }\n\n\n  updateClients() {\n    for (var i = 0; i < this.clients.length; i++) {\n      if (typeof this.clients[i] == \"undefined\") {\n        continue;\n      }\n\n      this.clients[i].playerTracker.update();\n    }\n  }\n\n  startingFood() {\n    // Spawns the starting amount of food cells\n    for (var i = 0; i < this.config.foodStartAmount; i++) {\n      this.spawnFood();\n    }\n  }\n\n  updateFood() {\n    var toSpawn = Math.min(this.config.foodSpawnAmount,(this.config.foodMaxAmount-this.currentFood));\n    for (var i = 0; i < toSpawn; i++) {\n      this.spawnFood();\n    }\n  }\n\n  spawnFood() {\n    var f = new Food(this.getNextNodeId(), null, this.getRandomPosition(), this.config.foodMass, null);\n    f.setColor(this.getRandomColor());\n\n    this.addNode(f);\n    this.currentFood++;\n  }\n\n  spawnPlayer(player,pos,mass) {\n    // Get random pos\n    if (pos == null) {\n      pos = this.getRandomSpawn();\n    }\n    // Get starting mass\n    if (mass == null) {\n      mass = this.config.playerStartMass;\n    }\n\n    // Spawn player and add to world\n    var cell = new PlayerCell(this.getNextNodeId(), player, pos, mass, null);\n    this.addNode(cell);\n\n    // Set initial mouse coords\n    player.mouse = {x: pos.x, y: pos.y};\n  }\n\n  virusCheck() {\n    // Checks if there are enough viruses on the map\n    if (this.nodesVirus.length < this.config.virusMinAmount) {\n      // Spawns a virus\n      var pos = this.getRandomPosition();\n      var virusSquareSize = (this.config.virusStartMass * 100) >> 0;\n\n      // Check for players\n      for (var i = 0; i < this.nodesPlayer.length; i++) {\n        var check = this.nodesPlayer[i];\n\n        if (check.mass < this.config.virusStartMass) {\n          continue;\n        }\n\n        var squareR = check.getSquareSize(); // squared Radius of checking player cell\n\n        var dx = check.position.x - pos.x;\n        var dy = check.position.y - pos.y;\n\n        if (dx * dx + dy * dy + virusSquareSize <= squareR)\n          return; // Collided\n      }\n\n      // Spawn if no cells are colliding\n      var v = new Virus(this.getNextNodeId(), null, pos, this.config.virusStartMass, null);\n      this.addNode(v);\n    }\n  }\n\n  updateMoveEngine() {\n    // Move player cells\n    var len = this.nodesPlayer.length;\n    for (var i = 0; i < len; i++) {\n      var cell = this.nodesPlayer[i];\n\n      // Do not move cells that have already been eaten or have collision turned off\n      if (!cell){\n        continue;\n      }\n\n      var client = cell.owner;\n\n      cell.calcMove(client.mouse.x, client.mouse.y, this);\n\n      // Check if cells nearby\n      var list = this.getCellsInRange(cell);\n      for (var j = 0; j < list.length ; j++) {\n        var check = list[j];\n\n        // if we're deleting from this.nodesPlayer, fix outer loop variables\n        // we need to update its length, and maybe 'i' too\n        if (check.cellType == 0) {\n          len--;\n          if (check.nodeId < cell.nodeId) {\n            i--;\n          }\n        }\n\n        // Consume effect\n        check.onConsume(cell,this);\n\n        // Remove cell\n        check.setKiller(cell);\n        this.removeNode(check);\n      }\n    }\n\n    // A system to move cells not controlled by players (ex. viruses, ejected mass)\n    len = this.movingNodes.length;\n    for (var i = 0; i < len; i++) {\n      var check = this.movingNodes[i];\n\n      // Recycle unused nodes\n      while ((typeof check == \"undefined\") && (i < this.movingNodes.length)) {\n        // Remove moving cells that are undefined\n        this.movingNodes.splice(i, 1);\n        check = this.movingNodes[i];\n      }\n\n      if (i >= this.movingNodes.length) {\n        continue;\n      }\n\n      if (check.moveEngineTicks > 0) {\n        check.onAutoMove(this);\n        // If the cell has enough move ticks, then move it\n        check.calcMovePhys(this.config);\n      } else {\n        // Auto move is done\n        check.moveDone(this);\n        // Remove cell from list\n        var index = this.movingNodes.indexOf(check);\n        if (index != -1) {\n          this.movingNodes.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  setAsMovingNode(node) {\n    this.movingNodes.push(node);\n  }\n\n  splitCells(client: PlayerTracker) {\n    var len = client.cells.length;\n    for (var i = 0; i < len; i++) {\n      if (client.cells.length >= this.config.playerMaxCells) {\n        // Player cell limit\n        continue;\n      }\n\n      var cell = client.cells[i];\n      if (!cell) {\n        continue;\n      }\n\n      if (cell.mass < this.config.playerMinMassSplit) {\n        continue;\n      }\n\n      // Get angle\n      var deltaY = client.mouse.y - cell.position.y;\n      var deltaX = client.mouse.x - cell.position.x;\n      var angle = Math.atan2(deltaX,deltaY);\n\n      // Get starting position\n      var size = cell.getSize()/2;\n      var startPos = {\n        x: cell.position.x + ( size * Math.sin(angle) ),\n        y: cell.position.y + ( size * Math.cos(angle) )\n      };\n      // Calculate mass and speed of splitting cell\n      var splitSpeed = cell.getSpeed() * 6;\n      var newMass = cell.mass / 2;\n      cell.mass = newMass;\n      // Create cell\n      var split = new PlayerCell(this.getNextNodeId(), client, startPos, newMass, null);\n      split.setAngle(angle);\n      split.setMoveEngineData(splitSpeed, 32, 0.85);\n      split.calcMergeTime(this.config.playerRecombineTime);\n\n      // Add to moving cells list\n      this.setAsMovingNode(split);\n      this.addNode(split);\n    }\n  }\n\n  ejectMass(client) {\n    for (var i = 0; i < client.cells.length; i++) {\n      var cell = client.cells[i];\n\n      if (!cell) {\n        continue;\n      }\n\n      if (cell.mass < this.config.playerMinMassEject) {\n        continue;\n      }\n\n      var deltaY = client.mouse.y - cell.position.y;\n      var deltaX = client.mouse.x - cell.position.x;\n      var angle = Math.atan2(deltaX,deltaY);\n\n      // Get starting position\n      var size = cell.getSize() + 5;\n      var startPos = {\n      x: cell.position.x + ( (size + this.config.ejectMass) * Math.sin(angle) ),\n      y: cell.position.y + ( (size + this.config.ejectMass) * Math.cos(angle) )\n      };\n\n      // Remove mass from parent cell\n      cell.mass -= this.config.ejectMassLoss;\n      // Randomize angle\n      angle += (Math.random() * .4) - .2;\n\n      // Create cell\n      var ejected = new EjectedMass(this.getNextNodeId(), null, startPos, this.config.ejectMass, null);\n      ejected.setAngle(angle);\n      ejected.setMoveEngineData(this.config.ejectSpeed, 20, null);\n      ejected.setColor(cell.getColor());\n\n      this.addNode(ejected);\n      this.setAsMovingNode(ejected);\n    }\n  }\n\n  newCellVirused(client, parent, angle, mass, speed) {\n    // Starting position\n    var startPos = {\n      x: parent.position.x,\n      y: parent.position.y\n    };\n\n    // Create cell\n    var newCell = new PlayerCell(this.getNextNodeId(), client, startPos, mass, null);\n    newCell.setAngle(angle);\n    newCell.setMoveEngineData(speed, 15, null);\n    newCell.calcMergeTime(this.config.playerRecombineTime);\n    newCell.ignoreCollision = true; // Remove collision checks\n\n    // Add to moving cells list\n    this.addNode(newCell);\n    this.setAsMovingNode(newCell);\n  }\n\n  shootVirus(parent) {\n    var parentPos = {\n    x: parent.position.x,\n    y: parent.position.y,\n    };\n\n    var newVirus = new Virus(this.getNextNodeId(), null, parentPos, this.config.virusStartMass, null);\n    newVirus.setAngle(parent.getAngle());\n    newVirus.setMoveEngineData(200, 20, null);\n\n    // Add to moving cells list\n    this.addNode(newVirus);\n    this.setAsMovingNode(newVirus);\n  }\n\n  getCellsInRange(cell) {\n    var list = new Array();\n    var squareR = cell.getSquareSize(); // Get cell squared radius\n\n    // Loop through all cells that are visible to the cell. There is probably a more efficient way of doing this but whatever\n    var len = cell.owner.visibleNodes.length;\n    for (var i = 0;i < len;i++) {\n      var check = cell.owner.visibleNodes[i];\n\n      if (typeof check === 'undefined') {\n        continue;\n      }\n\n      // if something already collided with this cell, don't check for other collisions\n      if (check.inRange) {\n        continue;\n      }\n\n      // Can't eat itself\n      if (cell.nodeId == check.nodeId) {\n        continue;\n      }\n\n      // Can't eat cells that have collision turned off\n      if ((cell.owner == check.owner) && (cell.ignoreCollision)) {\n        continue;\n      }\n\n      // AABB Collision\n      if (!check.collisionCheck2(squareR, cell.position)) {\n        continue;\n      }\n\n      // Cell type check - Cell must be bigger than this number times the mass of the cell being eaten\n      var multiplier = 1.25;\n\n      switch (check.getType()) {\n        case 1: // Food cell\n          list.push(check);\n          check.inRange = true; // skip future collision checks for this food\n          continue;\n        case 2: // Virus\n          multiplier = 1.33;\n          break;\n        case 0: // Players\n          // Can't eat self if it's not time to recombine yet\n          if (check.owner == cell.owner) {\n            if ((cell.recombineTicks > 0) || (check.recombineTicks > 0)) {\n              continue;\n            }\n\n            multiplier = 1.00;\n          }\n\n          // Can't eat team members\n          if (this.gameMode.haveTeams) {\n            if (!check.owner) { // Error check\n              continue;\n            }\n\n            if ((check.owner != cell.owner)\n                && (check.owner.getTeam() == cell.owner.getTeam())) {\n              continue;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Make sure the cell is big enough to be eaten.\n      if ((check.mass * multiplier) > cell.mass) {\n        continue;\n      }\n\n      // Eating range\n      var xs = Math.pow(check.position.x - cell.position.x, 2);\n      var ys = Math.pow(check.position.y - cell.position.y, 2);\n      var dist = Math.sqrt( xs + ys );\n\n      // Eating range = radius of eating cell + 40% of the radius of the cell being eaten\n      var eatingRange = cell.getSize() - check.getEatingRange();\n      if (dist > eatingRange) {\n        // Not in eating range\n        continue;\n      }\n\n      // Add to list of cells nearby\n      list.push(check);\n\n      // Something is about to eat this cell; no need to check for other collisions with it\n      check.inRange = true;\n    }\n    return list;\n  }\n\n  getNearestVirus(cell) {\n    // More like getNearbyVirus\n    var virus = null;\n    var r = 100; // Checking radius\n\n    var topY = cell.position.y - r;\n    var bottomY = cell.position.y + r;\n\n    var leftX = cell.position.x - r;\n    var rightX = cell.position.x + r;\n\n    // Loop through all viruses on the map. There is probably a more efficient way of doing this but whatever\n    var len = this.nodesVirus.length;\n    for (var i = 0;i < len;i++) {\n      var check = this.nodesVirus[i];\n\n      if (typeof check === 'undefined') {\n        continue;\n      }\n\n      if (!check.collisionCheck(bottomY,topY,rightX,leftX)) {\n        continue;\n      }\n\n      // Add to list of cells nearby\n      virus = check;\n      break; // stop checking when a virus found\n    }\n    return virus;\n  }\n\n  updateCells() {\n    if (!this.run) {\n      // Server is paused\n      return;\n    }\n\n    // Loop through all player cells\n    var massDecay = 1 - (this.config.playerMassDecayRate * this.gameMode.decayMod);\n    for (var i = 0; i < this.nodesPlayer.length; i++) {\n      var cell = this.nodesPlayer[i];\n\n      if (!cell) {\n        continue;\n      }\n\n      if (cell.recombineTicks > 0) {\n        // Recombining\n        cell.recombineTicks--;\n      }\n\n      // Mass decay\n      if (cell.mass >= this.config.playerMinMassDecay) {\n        cell.mass *= massDecay;\n      }\n    }\n  }\n\n  loadConfig() {\n    try {\n      // Load the contents of the config file\n      var load = ini.parse(fs.readFileSync('./gameserver.ini', 'utf-8'));\n\n      // Replace all the default config's values with the loaded config's values\n      for (var obj in load) {\n        this.config[obj] = load[obj];\n      }\n    } catch (err) {\n      // No config\n      console.log(\"[Game] Config not found... Generating new config\");\n\n      // Create a new config\n      fs.writeFileSync('./gameserver.ini', ini.stringify(this.config, null));\n    }\n  }\n\n  switchSpectator(player) {\n    if (this.gameMode.specByLeaderboard) {\n      player.spectatedPlayer++;\n      if (player.spectatedPlayer == this.leaderboard.length) {\n        player.spectatedPlayer = 0;\n      }\n    } else {\n      // Find next non-spectator with cells in the client list\n      var oldPlayer = player.spectatedPlayer + 1;\n      var count = 0;\n      while (player.spectatedPlayer != oldPlayer && count != this.clients.length) {\n        if (oldPlayer == this.clients.length) {\n          oldPlayer = 0;\n          continue;\n        }\n\n        if (!this.clients[oldPlayer]) {\n          // Break out of loop in case client tries to spectate an undefined player\n          player.spectatedPlayer = -1;\n          break;\n        }\n\n        if (this.clients[oldPlayer].playerTracker.cells.length > 0) {\n          break;\n        }\n\n        oldPlayer++;\n        count++;\n      }\n      if (count == this.clients.length) {\n        player.spectatedPlayer = -1;\n      } else {\n        player.spectatedPlayer = oldPlayer;\n      }\n    }\n  }\n\n  // Stats server\n\n  startStatsServer(port) {\n    // Do not start the server if the port is negative\n    if (port < 1) {\n      return;\n    }\n\n    // Create stats\n    this.stats = \"Test\";\n    this.getStats();\n\n    // Show stats\n    this.httpServer = http.createServer(function(req, res) {\n      res.setHeader('Access-Control-Allow-Origin', '*');\n      res.writeHead(200);\n      res.end(this.stats);\n    }.bind(this));\n\n    this.httpServer.listen(port, function() {\n      // Stats server\n      console.log(\"[Game] Loaded stats server on port \" + port);\n      setInterval(this.getStats.bind(this), this.config.serverStatsUpdate * 1000);\n    }.bind(this));\n  }\n\n  getStats() {\n    var players = 0;\n    this.clients.forEach(function(client) {\n      if (client.playerTracker && client.playerTracker.cells.length > 0)\n        players++\n    });\n    var s = {\n      'current_players': this.clients.length,\n      'alive': players,\n      'spectators': this.clients.length - players,\n      'max_players': this.config.serverMaxConnections,\n      'gamemode': this.gameMode.name,\n      'start_time': this.startTime\n    }\n    this.stats = JSON.stringify(s);\n  }\n}\n\n// Custom prototype functions\n// [] syntax to override typescript warning\nWebSocket['sendPacket'] = function(packet) {\n  function getBuf(data) {\n    var array = new Uint8Array(data.buffer || data);\n    var l = data.byteLength || data.length;\n    var o = data.byteOffset || 0;\n    var buffer = new Buffer(l);\n\n    for (var i = 0; i < l; i++) {\n      buffer[i] = array[o + i];\n    }\n\n    return buffer;\n  }\n\n  //if (this.readyState == WebSocket.OPEN && (this._socket.bufferSize == 0) && packet.build) {\n  if (this.readyState == WebSocket.OPEN && packet.build) {\n    var buf = packet.build();\n    this.send(getBuf(buf), {binary: true});\n  } else if (!packet.build) {\n    // Do nothing\n  } else {\n    this.readyState = WebSocket.CLOSED;\n    this.emit('close');\n    this.removeAllListeners();\n  }\n}\n\n"],"sourceRoot":"/source/"}