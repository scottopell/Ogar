{"version":3,"sources":["packet/UpdateNodes.ts"],"names":["UpdateNodes","UpdateNodes.constructor","UpdateNodes.build"],"mappings":"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","file":"packet/UpdateNodes.js","sourcesContent":["export default class UpdateNodes{\n  destroyQueue: any;\n  nodes: any;\n  nonVisibleNodes: any;\n\n  constructor(destroyQueue, nodes, nonVisibleNodes) {\n    this.destroyQueue = destroyQueue;\n    this.nodes = nodes;\n    this.nonVisibleNodes = nonVisibleNodes;\n  }\n\n  build() {\n    // Calculate nodes sub packet size before making the data view\n    var nodesLength = 0;\n    for (var i = 0; i < this.nodes.length; i++) {\n      var node = this.nodes[i];\n\n      if (typeof node == \"undefined\") {\n        continue;\n      }\n\n      nodesLength = nodesLength + 20 + (node.getName().length * 2);\n    }\n\n    var buf = new ArrayBuffer(3 + (this.destroyQueue.length * 12) + (this.nonVisibleNodes.length * 4) + nodesLength + 8);\n    var view = new DataView(buf);\n\n    view.setUint8(0, 16); // Packet ID\n    view.setUint16(1, this.destroyQueue.length, true); // Nodes to be destroyed\n\n    var offset = 3;\n    for (var i = 0; i < this.destroyQueue.length; i++) {\n      var node = this.destroyQueue[i];\n\n      if (!node) {\n        continue;\n      }\n\n      var killer = 0;\n      if (node.getKiller()) {\n        killer = node.getKiller().nodeId;\n      }\n\n      view.setUint32(offset, killer, true); // Killer ID\n      view.setUint32(offset + 4, node.nodeId, true); // Node ID\n\n      offset += 8;\n    }\n\n    for (var i = 0; i < this.nodes.length; i++) {\n      var node = this.nodes[i];\n\n      if (typeof node == \"undefined\") {\n        continue;\n      }\n\n      view.setUint32(offset, node.nodeId, true); // Node ID\n      view.setInt32(offset + 4, node.position.x, true); // X position\n      view.setInt32(offset + 8, node.position.y, true); // Y position\n      view.setUint16(offset + 12, node.getSize(), true); // Mass formula: Radius (size) = (mass * mass) / 100\n      view.setUint8(offset + 14, node.color.r); // Color (R)\n      view.setUint8(offset + 15, node.color.g); // Color (G)\n      view.setUint8(offset + 16, node.color.b); // Color (B)\n      view.setUint8(offset + 17, node.spiked); // Flags\n      offset += 18;\n\n      var name = node.getName();\n      if (name) {\n        for (var j = 0; j < name.length; j++) {\n          var c = name.charCodeAt(j);\n          if (c){\n            view.setUint16(offset, c, true);\n          }\n          offset += 2;\n        }\n      }\n\n      view.setUint16(offset, 0, true); // End of string\n      offset += 2;\n    }\n\n    var len = this.nonVisibleNodes.length + this.destroyQueue.length;\n    view.setUint32(offset, 0, true); // End\n    view.setUint32(offset + 4, len, true); // # of non-visible nodes to destroy\n\n    offset += 8;\n\n    // Destroy queue + nonvisible nodes\n    for (var i = 0; i < this.destroyQueue.length; i++) {\n      var node = this.destroyQueue[i];\n\n      if (!node) {\n        continue;\n      }\n\n      view.setUint32(offset, node.nodeId, true);\n      offset += 4;\n    }\n    for (var i = 0; i < this.nonVisibleNodes.length; i++) {\n      var node = this.nonVisibleNodes[i];\n\n      if (!node) {\n        continue;\n      }\n\n      view.setUint32(offset, node.nodeId, true);\n      offset += 4;\n    }\n\n    return buf;\n  };\n\n}\n"],"sourceRoot":"/source/"}