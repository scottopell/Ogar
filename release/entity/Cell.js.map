{"version":3,"sources":["entity/Cell.ts"],"names":["Cell","Cell.constructor","Cell.getName","Cell.setColor","Cell.getColor","Cell.getType","Cell.getSize","Cell.getSquareSize","Cell.addMass","Cell.getSpeed","Cell.setAngle","Cell.getAngle","Cell.setMoveEngineData","Cell.getEatingRange","Cell.getKiller","Cell.setKiller","Cell.collisionCheck","Cell.collisionCheck2","Cell.visibleCheck","Cell.calcMovePhys","Cell.sendUpdate","Cell.onConsume","Cell.onAdd","Cell.onRemove","Cell.onAutoMove","Cell.moveDone"],"mappings":"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","file":"entity/Cell.js","sourcesContent":["import { Color, Position } from '../HelperDefs/index'\nimport GameServer from '../GameServer';\nimport PlayerTracker from '../PlayerTracker';\n\nexport default class Cell{\n  nodeId: number;\n  owner: PlayerTracker;\n  color: Color;\n  position: Position;\n  mass: number;\n\n  // 0 = Player Cell, 1 = Food, 2 = Virus, 3 = Ejected Mass\n  // TODO enum, or utilize static typing\n  cellType: number;\n  spiked: number;\n\n  killedBy: any;\n  gameServer: GameServer;\n\n  moveEngineTicks: number;\n  moveEngineSpeed: number;\n  moveDecay: number;\n  angle: number;\n\n\n\n  constructor(\n      nodeId: number,\n      owner: PlayerTracker,\n      position: Position,\n      mass: number,\n      gameServer: GameServer) {\n    this.nodeId = nodeId;\n    // playerTracker that owns this cell\n    this.owner = owner;\n    this.color = {r: 0, g: 255, b: 0};\n    this.position = position;\n    // Starting mass of the cell\n    this.mass = mass;\n    this.cellType = -1;\n    // If 1, then this cell has spikes around it\n    this.spiked = 0;\n\n    // Cell that ate this cell\n    this.killedBy;\n    this.gameServer = gameServer;\n\n    // Amount of times to loop the movement function\n    this.moveEngineTicks = 0;\n    this.moveEngineSpeed = 0;\n    this.moveDecay = .75;\n    // Angle of movement\n    this.angle = 0;\n  }\n\n  getName() {\n    if (this.owner) {\n      return this.owner.name;\n    } else {\n      return \"\";\n    }\n  }\n\n  setColor(color) {\n    this.color.r = color.r;\n    this.color.b = color.b;\n    this.color.g = color.g;\n  }\n\n  getColor() {\n    return this.color;\n  }\n\n  getType() {\n    return this.cellType;\n  }\n\n  getSize() {\n    // Calculates radius based on cell mass\n    return Math.ceil(Math.sqrt(100 * this.mass));\n  }\n\n  getSquareSize () {\n    // R * R\n    return (100 * this.mass) >> 0;\n  }\n\n  addMass(n) {\n    if(this.mass + n > this.owner.gameServer.config.playerMaxMass && this.owner.cells.length < this.owner.gameServer.config.playerMaxCells) {\n      this.mass = (this.mass + n) / 2;\n      this.owner.gameServer.newCellVirused(this.owner, this, 0, this.mass, 150);\n    } else {\n      this.mass = Math.min(this.mass + n,this.owner.gameServer.config.playerMaxMass);\n    }\n  }\n\n  getSpeed() {\n    // Old formula: 5 + (20 * (1 - (this.mass/(70+this.mass))));\n    // Based on 50ms ticks. If updateMoveEngine interval changes, change 50 to new value\n    // (should possibly have a config value for this?)\n    return 30 * Math.pow(this.mass, -1.0 / 4.5) * 50 / 40;\n  }\n\n  setAngle(radians) {\n    this.angle = radians;\n  }\n\n  getAngle() {\n    return this.angle;\n  }\n\n  setMoveEngineData(speed, ticks, decay) {\n    this.moveEngineSpeed = speed;\n    this.moveEngineTicks = ticks;\n    this.moveDecay = isNaN(decay) ? 0.75 : decay;\n  }\n\n  getEatingRange() {\n    return 0; // 0 for ejected cells\n  }\n\n  getKiller() {\n    return this.killedBy;\n  }\n\n  setKiller(cell) {\n    this.killedBy = cell;\n  }\n\n  // Functions\n\n  collisionCheck(bottomY,topY,rightX,leftX) {\n    // Collision checking\n    if (this.position.y > bottomY) {\n      return false;\n    }\n\n    if (this.position.y < topY) {\n      return false;\n    }\n\n    if (this.position.x > rightX) {\n      return false;\n    }\n\n    if (this.position.x < leftX) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // This collision checking function is based on CIRCLE shape\n  collisionCheck2 (objectSquareSize, objectPosition) {\n    // IF (O1O2 + r <= R) THEN collided. (O1O2: distance b/w 2 centers of cells)\n    // (O1O2 + r)^2 <= R^2\n    // approximately, remove 2*O1O2*r because it requires sqrt(): O1O2^2 + r^2 <= R^2\n\n    var dx = this.position.x - objectPosition.x;\n    var dy = this.position.y - objectPosition.y;\n\n    return (dx * dx + dy * dy + this.getSquareSize() <= objectSquareSize);\n  }\n\n  visibleCheck(box,centerPos) {\n    // Checks if this cell is visible to the player\n    return this.collisionCheck(box.bottomY,box.topY,box.rightX,box.leftX);\n  }\n\n  calcMovePhys(config) {\n    // Movement for ejected cells\n    var X = this.position.x + ( this.moveEngineSpeed * Math.sin(this.angle) );\n    var Y = this.position.y + ( this.moveEngineSpeed * Math.cos(this.angle) );\n\n    // Movement engine\n    this.moveEngineSpeed *= this.moveDecay; // Decaying speed\n    this.moveEngineTicks--;\n\n    // Border check - Bouncy physics\n    var radius = 40;\n    if ((this.position.x - radius) < config.borderLeft) {\n      // Flip angle horizontally - Left side\n      this.angle = 6.28 - this.angle;\n      X = config.borderLeft + radius;\n    }\n    if ((this.position.x + radius) > config.borderRight) {\n      // Flip angle horizontally - Right side\n      this.angle = 6.28 - this.angle;\n      X = config.borderRight - radius;\n    }\n    if ((this.position.y - radius) < config.borderTop) {\n      // Flip angle vertically - Top side\n      this.angle = (this.angle <= 3.14) ? 3.14 - this.angle : 9.42 - this.angle;\n      Y = config.borderTop + radius;\n    }\n    if ((this.position.y + radius) > config.borderBottom) {\n      // Flip angle vertically - Bottom side\n      this.angle = (this.angle <= 3.14) ? 3.14 - this.angle : 9.42 - this.angle;\n      Y = config.borderBottom - radius;\n    }\n\n    // Set position\n    this.position.x = X >> 0;\n    this.position.y = Y >> 0;\n  }\n\n  // Override these\n\n  sendUpdate() {\n    // Whether or not to include this cell in the update packet\n    return true;\n  }\n\n  onConsume(consumer,gameServer) {\n    // Called when the cell is consumed\n  }\n\n  onAdd(gameServer) {\n    // Called when this cell is added to the world\n  }\n\n  onRemove(gameServer) {\n    // Called when this cell is removed\n  }\n\n  onAutoMove(gameServer) {\n    // Called on each auto move engine tick\n  }\n\n  moveDone(gameServer) {\n    // Called when this cell finished moving with the auto move engine\n  }\n\n}\n"],"sourceRoot":"/source/"}