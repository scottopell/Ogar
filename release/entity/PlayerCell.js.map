{"version":3,"sources":["entity/PlayerCell.ts"],"names":["PlayerCell","PlayerCell.constructor","PlayerCell.visibleCheck","PlayerCell.simpleCollide","PlayerCell.calcMergeTime","PlayerCell.calcMove","PlayerCell.getEatingRange","PlayerCell.onConsume","PlayerCell.onAdd","PlayerCell.onRemove","PlayerCell.moveDone","PlayerCell.abs","PlayerCell.getDist"],"mappings":"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","file":"entity/PlayerCell.js","sourcesContent":["import Cell from './Cell';\n\nexport default class PlayerCell extends Cell{\n  cellType: number;\n  // Ticks until the cell can recombine with other cells\n  recombineTicks: number;\n  // This is used by player cells so that they dont\n  // cause any problems when splitting\n  ignoreCollision: boolean;\n\n  constructor(nodeId, owner, position, mass, gameServer){\n    super(nodeId, owner, position, mass, gameServer);\n\n    this.cellType = 0;\n    this.recombineTicks = 0;\n    this.ignoreCollision = false;\n  }\n\n  // Main Functions\n\n  visibleCheck(box,centerPos) {\n    // Use old fashioned checking method if cell is small\n    if (this.mass < 100) {\n      return this.collisionCheck(box.bottomY,box.topY,box.rightX,box.leftX);\n    }\n\n    // Checks if this cell is visible to the player\n    var cellSize = this.getSize();\n    // Width of cell + width of the box (Int)\n    var lenX = cellSize + box.width >> 0;\n    // Height of cell + height of the box (Int)\n    var lenY = cellSize + box.height >> 0;\n\n    return (this.abs(this.position.x - centerPos.x) < lenX)\n      && (this.abs(this.position.y - centerPos.y) < lenY);\n  };\n\n  simpleCollide(x1,y1,check,d) {\n    // Simple collision check\n    var len = d >> 0; // Width of cell + width of the box (Int)\n\n    return (this.abs(x1 - check.position.x) < len) &&\n      (this.abs(y1 - check.position.y) < len);\n  };\n\n  calcMergeTime(base) {\n    this.recombineTicks = base + ((0.02 * this.mass) >> 0); // Int (30 sec + (.02 * mass))\n  };\n\n  // Movement\n\n  calcMove(x2, y2, gameServer) {\n    var config = gameServer.config;\n    var r = this.getSize(); // Cell radius\n\n    // Get angle\n    var deltaY = y2 - this.position.y;\n    var deltaX = x2 - this.position.x;\n    var angle = Math.atan2(deltaX,deltaY);\n\n    if(isNaN(angle)) {\n      return;\n    }\n\n    // Distance between mouse pointer and cell\n    var dist = this.getDist(this.position.x,this.position.y,x2,y2);\n    var speed = Math.min(this.getSpeed(),dist);\n\n    var x1 = this.position.x + ( speed * Math.sin(angle) );\n    var y1 = this.position.y + ( speed * Math.cos(angle) );\n\n    // Collision check for other cells\n    for (var i = 0; i < this.owner.cells.length;i++) {\n      var cell = this.owner.cells[i];\n\n      if ((this.nodeId == cell.nodeId) || (this.ignoreCollision)) {\n        continue;\n      }\n\n      if ((cell.recombineTicks > 0) || (this.recombineTicks > 0)) {\n        // Cannot recombine - Collision with your own cells\n        var collisionDist = cell.getSize() + r; // Minimum distance between the 2 cells\n        if (!this.simpleCollide(x1,y1,cell,collisionDist)) {\n          // Skip\n          continue;\n        }\n\n        // First collision check passed... now more precise checking\n        dist = this.getDist(this.position.x,this.position.y,cell.position.x,cell.position.y);\n\n        // Calculations\n        if (dist < collisionDist) { // Collided\n          // The moving cell pushes the colliding cell\n          var newDeltaY = cell.position.y - y1;\n          var newDeltaX = cell.position.x - x1;\n          var newAngle = Math.atan2(newDeltaX,newDeltaY);\n\n          var move = collisionDist - dist + 5;\n\n          cell.position.x = cell.position.x + ( move * Math.sin(newAngle) ) >> 0;\n          cell.position.y = cell.position.y + ( move * Math.cos(newAngle) ) >> 0;\n        }\n      }\n    }\n\n    gameServer.gameMode.onCellMove(x1,y1,this);\n\n    // Check to ensure we're not passing the world border\n    if (x1 < config.borderLeft) {\n      x1 = config.borderLeft;\n    }\n    if (x1 > config.borderRight) {\n      x1 = config.borderRight;\n    }\n    if (y1 < config.borderTop) {\n      y1 = config.borderTop;\n    }\n    if (y1 > config.borderBottom) {\n      y1 = config.borderBottom;\n    }\n\n    this.position.x = x1 >> 0;\n    this.position.y = y1 >> 0;\n  };\n\n  // Override\n\n  getEatingRange() {\n    return this.getSize() * .4;\n  };\n\n  onConsume(consumer,gameServer) {\n    consumer.addMass(this.mass);\n  };\n\n  onAdd(gameServer) {\n    // Add to special player node list\n    gameServer.nodesPlayer.push(this);\n    // Gamemode actions\n    gameServer.gameMode.onCellAdd(this);\n  };\n\n  onRemove(gameServer) {\n    var index;\n    // Remove from player cell list\n    index = this.owner.cells.indexOf(this);\n    if (index != -1) {\n      this.owner.cells.splice(index, 1);\n    }\n    // Remove from special player controlled node list\n    index = gameServer.nodesPlayer.indexOf(this);\n    if (index != -1) {\n      gameServer.nodesPlayer.splice(index, 1);\n    }\n    // Gamemode actions\n    gameServer.gameMode.onCellRemove(this);\n  };\n\n  moveDone(gameServer) {\n    this.ignoreCollision = false;\n  };\n\n  // Lib\n\n  abs(x) {\n    return x < 0 ? -x : x;\n  }\n\n  getDist(x1, y1, x2, y2) {\n    var xs = x2 - x1;\n    xs = xs * xs;\n\n    var ys = y2 - y1;\n    ys = ys * ys;\n\n    return Math.sqrt(xs + ys);\n  }\n\n}\n"],"sourceRoot":"/source/"}