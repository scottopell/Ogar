{"version":3,"sources":["index.ts"],"names":["showPrompt","parseCommands"],"mappings":";;;;;;kCAE0B,uBAAuB;;IAArC,QAAQ;;0BACG,cAAc;;;;wBACX,UAAU;;IAAxB,QAAQ;;AAGpB,IAAI,WAAW,GAAG,IAAI,CAAC;AAGvB,OAAO,CAAC,GAAG,CAAC,4DAA4D,CAAC,CAAC;AAG1E,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,UAAS,GAAG,EAAA;AAC/B,QAAI,GAAG,IAAI,aAAa,EAAE;AACxB,mBAAW,GAAG,KAAK,CAAC;KACrB,MAAM,IAAI,GAAG,IAAI,QAAQ,EAAE;AAC1B,eAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAC3C,eAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;AAC5D,eAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;AAClD,eAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KACjB;CACF,CAAC,CAAC;AAGH,IAAI,UAAU,GAAG,6BAAgB,CAAC;AAClC,UAAU,CAAC,KAAK,EAAE,CAAC;AAEnB,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE/B,IAAI,WAAW,EAAE;AACf,QAAI,KAAK,GAAG,QAAQ,CAAC,eAAe,CAChC,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAC/C,CAAC;AACN,cAAU,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;CAC7B;AAKD,SAAA,UAAA,GAAA;AACEA,SAAKA,CAACA,QAAQA,CAACA,GAAGA,EAAEA,UAASA,GAAGA,EAAAA;AAC9B,qBAAa,CAAC,GAAG,CAAC,CAAC;AACnB,eAAO,UAAU,EAAE,CAAC;KACrB,CAACA,CAACA;CACJA;AAAA,CAAC;AAEF,SAAA,aAAA,CAAuB,GAAW,EAAA;AAEhCC,cAAUA,CAACA,GAAGA,CAACA,SAASA,CAACA,GAAGA,CAACA,CAACA;AAG9BA,QAAIA,GAAGA,KAAKA,EAAEA,EACZA,OAAOA;AAGTA,QAAIA,KAAKA,GAAGA,GAAGA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA;AAG3BA,QAAIA,KAAKA,GAAGA,KAAKA,CAACA,CAACA,CAACA,CAACA,WAAWA,EAAEA,CAACA;AAGnCA,QAAIA,OAAOA,GAAGA,UAAUA,CAACA,QAAQA,CAACA,KAAKA,CAACA,CAACA;AACzCA,QAAIA,OAAOA,KAAKA,SAASA,EAAEA;AACzBA,eAAOA,CAACA,UAAUA,EAAEA,KAAKA,CAACA,CAACA;KAC5BA,MAAMA;AACLA,eAAOA,CAACA,GAAGA,CAACA,4BAA4BA,CAACA,CAACA;KAC3CA;CACFA;AAAA,CAAC","file":"index.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n// Imports\nimport * as Commands from './modules/CommandList';\nimport GameServer from './GameServer';\nimport * as Readline from 'readline';\n\n// Init variables\nvar showConsole = true;\n\n// Start msg\nconsole.log(\"[Game] Ogar - An open source Agar.io server implementation\");\n\n// Handle arguments\nprocess.argv.forEach(function(val) {\n  if (val == \"--noconsole\") {\n    showConsole = false;\n  } else if (val == \"--help\") {\n    console.log(\"Proper Usage: node index.js\");\n    console.log(\"    --noconsole         Disables the console\");\n    console.log(\"    --help              Help menu.\");\n    console.log(\"\");\n  }\n});\n\n// Run Ogar\nvar gameServer = new GameServer();\ngameServer.start();\n// Add command handler\ngameServer.commands = Commands;\n// Initialize the server console\nif (showConsole) {\n  var input = Readline.createInterface(\n      { input: process.stdin, output: process.stdout }\n      );\n  setTimeout(showPrompt, 100);\n}\n\n\n// Console functions\n\nfunction showPrompt() {\n  input.question(\">\", function(str) {\n    parseCommands(str);\n    return showPrompt(); // Too lazy to learn async\n  });\n};\n\nfunction parseCommands(str: string) {\n  // Log the string\n  gameServer.log.onCommand(str);\n\n  // Don't process ENTER\n  if (str === '')\n    return;\n\n  // Splits the string\n  var split = str.split(\" \");\n\n  // Process the first string value\n  var first = split[0].toLowerCase();\n\n  // Get command function\n  var execute = gameServer.commands[first];\n  if (execute !== undefined) {\n    execute(gameServer, split);\n  } else {\n    console.log(\"[Console] Invalid Command!\");\n  }\n};\n"],"sourceRoot":"/source/"}