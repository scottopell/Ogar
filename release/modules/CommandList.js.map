{"version":3,"sources":["modules/CommandList.ts"],"names":["help","addbot","board","boardreset","change","clear","color","exit","food","gamemode","kick","kill","killall","mass","name","playerlist","pause","reload","status","tp","virus"],"mappings":"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","file":"modules/CommandList.js","sourcesContent":["// Imports\nimport {get as getGameMode} from '../gamemodes/index';\nimport {Food, Virus} from '../entity/index';\n\n// Utils\nvar fillChar = function (data, charr, fieldLength, rTL) {\n  var result = data.toString();\n  if (rTL === true) {\n    for (var i = result.length; i < fieldLength; i++){\n      result = charr.concat(result);\n    }\n  } else {\n    for (var i = result.length; i < fieldLength; i++){\n      result = result.concat(charr);\n    }\n  }\n  return result;\n};\n\n// Commands\nexport default function help(gameServer,split) {\n  console.log(\"[Console] ======================== HELP ======================\");\n  console.log(\"[Console] addbot     : add bot to the server\");\n  console.log(\"[Console] board      : set scoreboard text\");\n  console.log(\"[Console] boardreset : reset scoreboard text\");\n  console.log(\"[Console] change     : change specified settings\");\n  console.log(\"[Console] clear      : clear console output\");\n  console.log(\"[Console] color      : set cell(s) color by client ID\");\n  console.log(\"[Console] exit       : stop the server\");\n  console.log(\"[Console] food       : spawn food at specified Location\");\n  console.log(\"[Console] gamemode   : change server gamemode\");\n  console.log(\"[Console] kick       : kick player or bot by client ID\");\n  console.log(\"[Console] kill       : kill cell(s) by client ID\");\n  console.log(\"[Console] killall    : kill everyone\");\n  console.log(\"[Console] mass       : set cell(s) mass by client ID\");\n  console.log(\"[Console] name       : change cell(s) name by client ID\");\n  console.log(\"[Console] playerlist : get list of players and bots\");\n  console.log(\"[Console] pause      : pause game , freeze all cells\");\n  console.log(\"[Console] reload     : reload config\");\n  console.log(\"[Console] status     : get server status\");\n  console.log(\"[Console] tp         : teleport player to specified location\");\n  console.log(\"[Console] virus      : spawn virus at a specified Location\");\n  console.log(\"[Console] ====================================================\");\n}\n\nexport function addbot(gameServer,split) {\n  var add = parseInt(split[1]);\n  if (isNaN(add)) {\n    add = 1; // Adds 1 bot if user doesnt specify a number\n  }\n\n  for (var i = 0; i < add; i++) {\n    gameServer.bots.addBot();\n  }\n  console.log(\"[Console] Added \"+add+\" player bots\");\n}\nexport function board(gameServer,split) {\n  var newLB = [];\n  for (var i = 1; i < split.length; i++) {\n    newLB[i - 1] = split[i];\n  }\n\n  // Clears the update leaderboard function and replaces it with our own\n  gameServer.gameMode.packetLB = 48;\n  gameServer.gameMode.specByLeaderboard = false;\n  gameServer.gameMode.updateLB = function(gameServer) {gameServer.leaderboard = newLB};\n  console.log(\"[Console] Successfully changed leaderboard values\");\n}\nexport function boardreset(gameServer) {\n  // Gets the current gamemode\n  var gm = getGameMode(gameServer.gameMode.ID);\n\n  // Replace functions\n  gameServer.gameMode.packetLB = gm.packetLB;\n  gameServer.gameMode.updateLB = gm.updateLB;\n  console.log(\"[Console] Successfully reset leaderboard\");\n}\nexport function change(gameServer,split) {\n  var key = split[1];\n  var value = split[2];\n\n  // Check if int/float\n  if (value.indexOf('.') != -1) {\n    value = parseFloat(value);\n  } else {\n    value = parseInt(value);\n  }\n\n  if (typeof gameServer.config[key] != 'undefined') {\n    gameServer.config[key] = value;\n    console.log(\"[Console] Set \" + key + \" to \" + value);\n  } else {\n    console.log(\"[Console] Invalid config value\");\n  }\n}\nexport function clear() {\n  process.stdout.write(\"\\u001b[2J\\u001b[0;0H\");\n}\nexport function color(gameServer,split) {\n  // Validation checks\n  var id = parseInt(split[1]);\n  if (isNaN(id)) {\n    console.log(\"[Console] Please specify a valid player ID!\");\n    return;\n  }\n\n  var color = {r: 0, g: 0, b: 0};\n  color.r = Math.max(Math.min(parseInt(split[2]), 255), 0);\n  color.g = Math.max(Math.min(parseInt(split[3]), 255), 0);\n  color.b = Math.max(Math.min(parseInt(split[4]), 255), 0);\n\n  // Sets color to the specified amount\n  for (var i in gameServer.clients) {\n    if (gameServer.clients[i].playerTracker.pID == id) {\n      var client = gameServer.clients[i].playerTracker;\n      client.setColor(color); // Set color\n      for (var j in client.cells) {\n        client.cells[j].setColor(color);\n      }\n      break;\n    }\n  }\n}\nexport function exit(gameServer,split) {\n  console.log(\"[Console] Closing server...\");\n  gameServer.socketServer.close();\n  process.exit(1);\n}\nexport function food(gameServer,split) {\n  var pos = {x: parseInt(split[1]), y: parseInt(split[2])};\n  var mass = parseInt(split[3]);\n\n  // Make sure the input values are numbers\n  if (isNaN(pos.x) || isNaN(pos.y)) {\n    console.log(\"[Console] Invalid coordinates\");\n    return;\n  }\n\n  if (isNaN(mass)) {\n    mass = gameServer.config.foodStartMass;\n  }\n\n  // Spawn\n  var f = new Food(gameServer.getNextNodeId(), null, pos, mass, null);\n  f.setColor(gameServer.getRandomColor());\n  gameServer.addNode(f);\n  gameServer.currentFood++;\n  console.log(\"[Console] Spawned 1 food cell at (\"+pos.x+\" , \"+pos.y+\")\");\n}\nexport function gamemode(gameServer,split) {\n  try {\n    var n = parseInt(split[1]);\n    var gm = getGameMode(n); // If there is an invalid gamemode, the function will exit\n    gameServer.gameMode.onChange(gameServer); // Reverts the changes of the old gamemode\n    gameServer.gameMode = gm; // Apply new gamemode\n    gameServer.gameMode.onServerInit(gameServer); // Resets the server\n    console.log(\"[Game] Changed game mode to \" + gameServer.gameMode.name);\n  } catch (e) {\n    console.log(\"[Console] Invalid game mode selected\");\n  }\n}\nexport function kick(gameServer,split) {\n  var id = parseInt(split[1]);\n  if (isNaN(id)) {\n    console.log(\"[Console] Please specify a valid player ID!\");\n    return;\n  }\n\n  for (var i in gameServer.clients) {\n    if (gameServer.clients[i].playerTracker.pID == id) {\n      var client = gameServer.clients[i].playerTracker;\n      var len = client.cells.length;\n      for (var j = 0; j < len; j++) {\n        gameServer.removeNode(client.cells[0]);\n      }\n      client.socket.close();\n      console.log(\"[Console] Kicked \" + client.name);\n      break;\n    }\n  }\n}\nexport function kill(gameServer,split) {\n  var id = parseInt(split[1]);\n  if (isNaN(id)) {\n    console.log(\"[Console] Please specify a valid player ID!\");\n    return;\n  }\n\n  var count = 0;\n  for (var i in gameServer.clients) {\n    if (gameServer.clients[i].playerTracker.pID == id) {\n      var client = gameServer.clients[i].playerTracker;\n      var len = client.cells.length;\n      for (var j = 0; j < len; j++) {\n        gameServer.removeNode(client.cells[0]);\n        count++;\n      }\n\n      console.log(\"[Console] Removed \" + count + \" cells\");\n      break;\n    }\n  }\n}\nexport function killall(gameServer,split) {\n  var count = 0;\n  var len = gameServer.nodesPlayer.length;\n  for (var i = 0; i < len; i++) {\n    gameServer.removeNode(gameServer.nodesPlayer[0]);\n    count++;\n  }\n  console.log(\"[Console] Removed \" + count + \" cells\");\n}\nexport function mass(gameServer,split) {\n  // Validation checks\n  var id = parseInt(split[1]);\n  if (isNaN(id)) {\n    console.log(\"[Console] Please specify a valid player ID!\");\n    return;\n  }\n\n  var amount = Math.max(parseInt(split[2]),9);\n  if (isNaN(amount)) {\n    console.log(\"[Console] Please specify a valid number\");\n    return;\n  }\n\n  // Sets mass to the specified amount\n  for (var i in gameServer.clients) {\n    if (gameServer.clients[i].playerTracker.pID == id) {\n      var client = gameServer.clients[i].playerTracker;\n      for (var j in client.cells) {\n        client.cells[j].mass = amount;\n      }\n\n      console.log(\"[Console] Set mass of \"+client.name+\" to \"+amount);\n      break;\n    }\n  }\n}\nexport function name(gameServer,split) {\n  // Validation checks\n  var id = parseInt(split[1]);\n  if (isNaN(id)) {\n    console.log(\"[Console] Please specify a valid player ID!\");\n    return;\n  }\n\n  var name = split.slice(2, split.length).join(' ');\n  if (typeof name == 'undefined') {\n    console.log(\"[Console] Please type a valid name\");\n    return;\n  }\n\n  // Change name\n  for (var i = 0; i < gameServer.clients.length; i++) {\n    var client = gameServer.clients[i].playerTracker;\n\n    if (client.pID == id) {\n      console.log(\"[Console] Changing \"+client.name+\" to \"+name);\n      client.name = name;\n      return;\n    }\n  }\n\n  // Error\n  console.log(\"[Console] Player \"+id+\" was not found\");\n}\nexport function playerlist(gameServer,split) {\n  console.log(\"[Console] Showing \" + gameServer.clients.length + \" players: \");\n  console.log(\" ID         | IP              | \"+fillChar('NICK', ' ', gameServer.config.playerMaxNickLength, false)+\" | CELLS | SCORE  | POSITION    \"); // Fill space\n  console.log(fillChar('', '-', ' ID         | IP              |  | CELLS | SCORE  | POSITION    '.length + gameServer.config.playerMaxNickLength, false));\n  for (var i = 0; i < gameServer.clients.length; i++) {\n    var client = gameServer.clients[i].playerTracker;\n\n    // ID with 3 digits length\n    var id = fillChar((client.pID), ' ', 10, true);\n\n    // Get ip (15 digits length)\n    var ip = \"BOT\";\n    if (typeof gameServer.clients[i].remoteAddress != 'undefined' ) {\n      ip = gameServer.clients[i].remoteAddress;\n    }\n    ip = fillChar(ip, ' ', 15, false);\n\n    // Get name and data\n    var nick = '', cells = '', score = '', position = '', data = '';\n    if (client.spectate) {\n      try {\n        // Get spectated player\n        if (gameServer.getMode().specByLeaderboard) { // Get spec type\n          nick = gameServer.leaderboard[client.spectatedPlayer].name;\n        } else {\n          nick = gameServer.clients[client.spectatedPlayer].playerTracker.name;\n        }\n      } catch (e) {\n        // Specating nobody\n        nick = \"\";\n      }\n      nick = (nick == \"\") ? \"An unnamed cell\" : nick;\n      data = fillChar(\"SPECTATING: \" + nick, '-', ' | CELLS | SCORE  | POSITION    '.length + gameServer.config.playerMaxNickLength, true);\n      console.log(\" \" + id + \" | \" + ip + \" | \" + data);\n    } else if (client.cells.length > 0) {\n      nick = fillChar((client.name == \"\") ? \"An unnamed cell\" : client.name, ' ', gameServer.config.playerMaxNickLength, false);\n      cells = fillChar(client.cells.length, ' ', 5, true);\n      score = fillChar(client.getScore(true), ' ', 6, true);\n      position = fillChar(client.centerPos.x >> 0, ' ', 5, true) + ', ' + fillChar(client.centerPos.y >> 0, ' ', 5, true);\n      console.log(\" \"+id+\" | \"+ip+\" | \"+nick+\" | \"+cells+\" | \"+score+\" | \"+position);\n    } else {\n      // No cells = dead player or in-menu\n      data = fillChar('DEAD OR NOT PLAYING', '-', ' | CELLS | SCORE  | POSITION    '.length + gameServer.config.playerMaxNickLength, true);\n      console.log(\" \" + id + \" | \" + ip + \" | \" + data);\n    }\n  }\n}\nexport function pause(gameServer,split) {\n  gameServer.run = !gameServer.run; // Switches the pause state\n  var s = gameServer.run ? \"Unpaused\" : \"Paused\";\n  console.log(\"[Console] \" + s + \" the game.\");\n}\nexport function reload(gameServer) {\n  gameServer.loadConfig();\n  console.log(\"[Console] Reloaded the config file successfully\");\n}\nexport function status(gameServer,split) {\n  // Get amount of humans/bots\n  var humans = 0, bots = 0;\n  for (var i = 0; i < gameServer.clients.length; i++) {\n    if ('_socket' in gameServer.clients[i]) {\n      humans++;\n    } else {\n      bots++;\n    }\n  }\n  //\n  console.log(\"[Console] Connected players: \"+gameServer.clients.length+\"/\"+gameServer.config.serverMaxConnections);\n  console.log(\"[Console] Players: \"+humans+\" Bots: \"+bots);\n  console.log(\"[Console] Server has been running for \"+process.uptime()+\" seconds.\");\n  console.log(\"[Console] Current memory usage: \"+process.memoryUsage().heapUsed/1000+\"/\"+process.memoryUsage().heapTotal/1000+\" kb\");\n  console.log(\"[Console] Current game mode: \"+gameServer.gameMode.name);\n}\nexport function tp(gameServer,split) {\n  var id = parseInt(split[1]);\n  if (isNaN(id)) {\n    console.log(\"[Console] Please specify a valid player ID!\");\n    return;\n  }\n\n  // Make sure the input values are numbers\n  var pos = {x: parseInt(split[2]), y: parseInt(split[3])};\n  if (isNaN(pos.x) || isNaN(pos.y)) {\n    console.log(\"[Console] Invalid coordinates\");\n    return;\n  }\n\n  // Spawn\n  for (var i in gameServer.clients) {\n    if (gameServer.clients[i].playerTracker.pID == id) {\n      var client = gameServer.clients[i].playerTracker;\n      for (var j in client.cells) {\n        client.cells[j].position.x = pos.x;\n        client.cells[j].position.y = pos.y;\n      }\n\n      console.log(\"[Console] Teleported \"+client.name+\" to (\"+pos.x+\" , \"+pos.y+\")\");\n      break;\n    }\n  }\n}\nexport function virus(gameServer,split) {\n  var pos = {x: parseInt(split[1]), y: parseInt(split[2])};\n  var mass = parseInt(split[3]);\n\n  // Make sure the input values are numbers\n  if (isNaN(pos.x) || isNaN(pos.y)) {\n    console.log(\"[Console] Invalid coordinates\");\n    return;\n  } if (isNaN(mass)) {\n    mass = gameServer.config.virusStartMass;\n  }\n\n  // Spawn\n  var v = new Virus(gameServer.getNextNodeId(), null, pos, mass, null);\n  gameServer.addNode(v);\n  console.log(\"[Console] Spawned 1 virus at (\"+pos.x+\" , \"+pos.y+\")\");\n}\n"],"sourceRoot":"/source/"}