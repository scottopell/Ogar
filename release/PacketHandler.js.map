{"version":3,"sources":["PacketHandler.ts"],"names":["stobuf","PacketHandler","PacketHandler.constructor","PacketHandler.handleMessage","PacketHandler.setNickname"],"mappings":"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","file":"PacketHandler.js","sourcesContent":["import * as Packet from './packet/index';\nimport GameServer from './GameServer';\nimport PlayerTracker from './PlayerTracker';\n\nfunction stobuf(buf) {\n  var length = buf.length;\n  var arrayBuf = new ArrayBuffer(length);\n  var view = new Uint8Array(arrayBuf);\n\n  for (var i = 0; i < length; i++) {\n    view[i] = buf[i];\n  }\n\n  return view.buffer;\n}\n\nexport default class PacketHandler{\n  gameServer: GameServer;\n  socket: any;\n  protocol: number;\n\n  pressQ: boolean;\n  pressW: boolean;\n  pressSpace: boolean;\n\n  constructor(gameServer: GameServer, socket) {\n    this.gameServer = gameServer;\n    this.socket = socket;\n    // Detect protocol version - we can do something about it later\n    this.protocol = 0;\n\n    this.pressQ = false;\n    this.pressW = false;\n    this.pressSpace = false;\n  }\n\n  handleMessage(message) {\n\n    // Discard empty messages\n    if (message.length == 0) {\n      return;\n    }\n\n    var buffer = stobuf(message);\n    var view = new DataView(buffer);\n    var packetId = view.getUint8(0);\n\n    switch (packetId) {\n      case 0:\n        // Check for invalid packets\n        if ((view.byteLength + 1) % 2 == 1) {\n          break;\n        }\n\n        // Set Nickname\n        var nick = \"\";\n        // 2 bytes per char\n        var maxLen = this.gameServer.config.playerMaxNickLength * 2;\n        for (var i = 1; i < view.byteLength && i <= maxLen; i += 2) {\n          var charCode = view.getUint16(i, true);\n          if (charCode == 0) {\n            break;\n          }\n\n          nick += String.fromCharCode(charCode);\n        }\n        this.setNickname(nick);\n        break;\n      case 1:\n        // Spectate mode\n        if (this.socket.playerTracker.cells.length <= 0) {\n          // Make sure client has no cells\n          this.gameServer.switchSpectator(this.socket.playerTracker);\n          this.socket.playerTracker.spectate = true;\n        }\n        break;\n      case 16:\n        // Set Target\n        if (view.byteLength == 13) {\n          var client = this.socket.playerTracker;\n          client.mouse.x = view.getInt32(1, true);\n          client.mouse.y = view.getInt32(5, true);\n        }\n        break;\n      case 17:\n        // Space Press - Split cell\n        this.pressSpace = true;\n        break;\n      case 18:\n        // Q Key Pressed\n        this.pressQ = true;\n        break;\n      case 19:\n        // Q Key Released\n        break;\n      case 21:\n        // W Press - Eject mass\n        this.pressW = true;\n        break;\n      case 255:\n        // Connection Start \n        if (view.byteLength == 5) {\n          this.protocol = view.getUint32(1, true);\n          // Send SetBorder packet first\n          var c = this.gameServer.config;\n          this.socket.sendPacket(new Packet.SetBorder(c.borderLeft, c.borderRight, c.borderTop, c.borderBottom));\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  setNickname(newNick) {\n    var client: PlayerTracker = this.socket.playerTracker;\n    if (client.cells.length < 1) {\n      // Set name first\n      client.setName(newNick); \n\n      // If client has no cells... then spawn a player\n      this.gameServer.gameMode.onPlayerSpawn(this.gameServer, client);\n\n      // Turn off spectate mode\n      client.spectate = false;\n    }\n  };\n}\n"],"sourceRoot":"/source/"}